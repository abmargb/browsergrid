(function(g){function e(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k;d=a;e=b;f=c;k=d<<16|e;h=0;j=46;e=23;d=8;break;case 1:d=HEAP[f+8*e]>k?2:4;break;case 2:d=j==e?9:3;break;case 3:j=e;d=7;break;case 4:d=HEAP[f+8*e]<k?5:9;break;case 5:d=h==e?9:6;break;case 6:h=e;d=7;break;case 7:e=j+h>>1;d=8;break;case 8:d=h!=j?1:9;break;case 9:d=HEAP[f+8*e]==k?10:11;break;case 10:g=HEAP[f+8*e+4];d=12;break;case 11:g=65533;d=12;break;case 12:return a=
g,a&65535;default:assert(0,"bad label: "+d)}}function b(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,l,m;e=a;f=b;g=c;h=d;l=_PyImport_ImportModule(e);e=l==0?1:2;break;case 1:j=-1;e=17;break;case 2:k=_PyObject_GetAttrString(l,f);e=k==0?14:3;break;case 3:e=_PyCapsule_IsValid(k,n)==0?4:5;break;case 4:_PyErr_SetString(HEAP[_PyExc_ValueError],u);e=14;break;case 5:m=_PyCapsule_GetPointer(k,n);e=g!=0?6:7;break;case 6:HEAP[g]=HEAP[m+4];e=7;break;case 7:e=h!=0?8:9;break;case 8:HEAP[h]=HEAP[m+8];
e=9;break;case 9:HEAP[k]-=1;e=HEAP[k]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=11;break;case 11:HEAP[l]-=1;e=HEAP[l]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=13;break;case 13:j=0;e=17;break;case 14:HEAP[l]-=1;e=HEAP[l]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=16;break;case 16:j=-1;e=17;break;case 17:return a=j;default:assert(0,"bad label: "+e)}}function a(){var a;for(a=-1;;)switch(a){case -1:var c;a=HEAP[ba]==0?1:4;break;case 1:a=b(W,
B,C,0)!=0?3:2;break;case 2:a=b(W,Y,0,A)!=0?3:4;break;case 3:c=-1;a=5;break;case 4:HEAP[ba]=1;c=0;a=5;break;case 5:return a=c;default:assert(0,"bad label: "+a)}}function c(a,b,c){var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,k;f=a;g=b;h=c;d=HEAP[g];d=d==-1?45:d==1?1:d==2?41:48;break;case 1:d=HEAP[f]>65535?2:12;break;case 2:d=HEAP[f]>>>16==2?3:11;break;case 3:d=h!=2E3?6:4;break;case 4:d=HEAP[f]!=134047?6:5;break;case 5:j=65535;d=49;break;case 6:d=HEAP[HEAP[M]+8*((HEAP[f]&65535)>>>8)]!=0?7:11;break;
case 7:d=(HEAP[f]&255)>=HEAP[HEAP[M]+8*((HEAP[f]&65535)>>>8)+4]?8:11;break;case 8:d=(HEAP[f]&255)<=HEAP[HEAP[M]+8*((HEAP[f]&65535)>>>8)+5]?9:11;break;case 9:k=HEAP[HEAP[HEAP[M]+8*((HEAP[f]&65535)>>>8)]+2*((HEAP[f]&255)-HEAP[HEAP[M]+8*((HEAP[f]&65535)>>>8)+4])];d=k!=-1?10:11;break;case 10:j=k;d=49;break;case 11:j=65535;d=49;break;case 12:d=h!=2E3?27:13;break;case 13:d=HEAP[f]==39708?23:14;break;case 14:d=HEAP[f]==20465?23:15;break;case 15:d=HEAP[f]==21085?23:16;break;case 16:d=HEAP[f]==21534?23:17;
break;case 17:d=HEAP[f]==22099?23:18;break;case 18:d=HEAP[f]==23032?23:19;break;case 19:d=HEAP[f]==23643?23:20;break;case 20:d=HEAP[f]==24183?23:21;break;case 21:d=HEAP[f]==30246?23:22;break;case 22:d=HEAP[f]==32363?23:24;break;case 23:j=65535;d=49;break;case 24:d=h!=2E3?27:25;break;case 25:d=HEAP[f]!=39709?27:26;break;case 26:k=-709;d=40;break;case 27:d=HEAP[HEAP[E]+8*(HEAP[f]>>>8)]==0?33:28;break;case 28:d=(HEAP[f]&255)<HEAP[HEAP[E]+8*(HEAP[f]>>>8)+4]?33:29;break;case 29:d=(HEAP[f]&255)>HEAP[HEAP[E]+
8*(HEAP[f]>>>8)+5]?33:30;break;case 30:k=HEAP[HEAP[HEAP[E]+8*(HEAP[f]>>>8)]+2*((HEAP[f]&255)-HEAP[HEAP[E]+8*(HEAP[f]>>>8)+4])];d=k==-1?33:31;break;case 31:d=k==-2?32:40;break;case 32:j=65534;d=49;break;case 33:d=HEAP[HEAP[C]+8*(HEAP[f]>>>8)]==0?39:34;break;case 34:d=(HEAP[f]&255)<HEAP[HEAP[C]+8*(HEAP[f]>>>8)+4]?39:35;break;case 35:d=(HEAP[f]&255)>HEAP[HEAP[C]+8*(HEAP[f]>>>8)+5]?39:36;break;case 36:k=HEAP[HEAP[HEAP[C]+8*(HEAP[f]>>>8)]+2*((HEAP[f]&255)-HEAP[HEAP[C]+8*(HEAP[f]>>>8)+4])];d=k==-1?39:37;
break;case 37:d=k<0?38:40;break;case 38:j=65535;d=49;break;case 39:j=65535;d=49;break;case 40:j=k;d=49;break;case 41:k=e(HEAP[f]&65535,HEAP[f+4]&65535,HEAP[ta]);d=k==-3?42:44;break;case 42:HEAP[g]=1;k=e(HEAP[f]&65535,0,HEAP[ta]);d=k==-3?43:45;break;case 43:j=65535;d=49;break;case 44:j=k;d=49;break;case 45:HEAP[g]=1;k=d=e(HEAP[f]&65535,0,HEAP[ta]);d=d==-3?46:47;break;case 46:j=65535;d=49;break;case 47:j=k;d=49;break;case 48:j=65535;d=49;break;case 49:return a=j,a&65535;default:assert(0,"bad label: "+
d)}}function d(){h=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);j=allocate([95,109,117,108,116,105,98,121,116,101,99,111,100,101,99,0],"i8",ALLOC_NORMAL);k=allocate([95,95,99,114,101,97,116,101,95,99,111,100,101,99,0],"i8",ALLOC_NORMAL);l=allocate([101,110,99,111,100,105,110,103,32,110,97,109,101,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,46,0],"i8",ALLOC_NORMAL);m=allocate([110,111,32,115,117,99,104,32,99,111,100,101,99,32,105,115,32,115,117,112,112,111,114,116,101,100,46,0],"i8",
ALLOC_NORMAL);n=allocate([109,117,108,116,105,98,121,116,101,99,111,100,101,99,46,95,95,109,97,112,95,42,0],"i8",ALLOC_NORMAL);o=allocate([103,101,116,99,111,100,101,99,0],"i8",ALLOC_NORMAL);p=allocate(1,"i8",ALLOC_NORMAL);q=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8",
"i8","i8","i8","i8"],ALLOC_NORMAL);r=allocate([95,95,109,97,112,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",ALLOC_NORMAL);u=allocate([109,97,112,32,100,97,116,97,32,109,117,115,116,32,98,101,32,97,32,67,97,112,115,117,108,101,46,0],"i8",ALLOC_NORMAL);s=allocate([100,115,103,45,62,119,105,100,116,104,32,61,61,32,49,32,124,124,32,100,115,103,45,62,119,105,100,116,104,32,61,61,32,50,0],"i8",ALLOC_NORMAL);t=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,99,106,107,99,111,100,101,99,115,47,95,99,111,100,101,
99,115,95,105,115,111,50,48,50,50,46,99,0],"i8",ALLOC_NORMAL);v=allocate([105,115,111,50,48,50,50,95,101,110,99,111,100,101,0],"i8",ALLOC_NORMAL);w=allocate([100,115,103,45,62,109,97,114,107,32,33,61,32,39,92,48,39,0],"i8",ALLOC_NORMAL);x=allocate([105,115,111,50,48,50,50,95,100,101,99,111,100,101,0],"i8",ALLOC_NORMAL);y=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);z=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);C=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);A=allocate(1,"%struct.dbcs_index*",
ALLOC_NORMAL);G=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);E=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);D=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);R=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);M=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);L=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);I=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);J=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);F=allocate(1,"%struct.dbcs_index*",ALLOC_NORMAL);V=allocate(1,"i1",ALLOC_NORMAL);Q=allocate([95,
99,111,100,101,99,115,95,107,114,0],"i8",ALLOC_NORMAL);Z=allocate([95,95,109,97,112,95,99,112,57,52,57,0],"i8",ALLOC_NORMAL);K=allocate([95,95,109,97,112,95,107,115,120,49,48,48,49,0],"i8",ALLOC_NORMAL);N=allocate([42,108,101,110,103,116,104,32,61,61,32,49,0],"i8",ALLOC_NORMAL);H=allocate([107,115,120,49,48,48,49,95,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);ba=allocate(1,"i1",ALLOC_NORMAL);W=allocate([95,99,111,100,101,99,115,95,106,112,0],"i8",ALLOC_NORMAL);B=allocate([95,95,109,97,112,95,
106,105,115,120,99,111,109,109,111,110,0],"i8",ALLOC_NORMAL);Y=allocate([95,95,109,97,112,95,106,105,115,120,48,50,48,56,0],"i8",ALLOC_NORMAL);fa=allocate([106,105,115,120,48,50,48,56,95,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);ha=allocate(1,"i1",ALLOC_NORMAL);la=allocate([95,95,109,97,112,95,106,105,115,120,48,50,49,50,0],"i8",ALLOC_NORMAL);ra=allocate([106,105,115,120,48,50,49,50,95,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);ya=allocate(1,"i1",ALLOC_NORMAL);Da=allocate([95,95,109,
97,112,95,106,105,115,120,48,50,49,51,95,98,109,112,0],"i8",ALLOC_NORMAL);Ua=allocate([95,95,109,97,112,95,106,105,115,120,48,50,49,51,95,49,95,98,109,112,0],"i8",ALLOC_NORMAL);Na=allocate([95,95,109,97,112,95,106,105,115,120,48,50,49,51,95,50,95,98,109,112,0],"i8",ALLOC_NORMAL);Pa=allocate([95,95,109,97,112,95,106,105,115,120,48,50,49,51,95,101,109,112,0],"i8",ALLOC_NORMAL);wa=allocate([95,95,109,97,112,95,106,105,115,120,48,50,49,51,95,49,95,101,109,112,0],"i8",ALLOC_NORMAL);Ya=allocate([95,95,
109,97,112,95,106,105,115,120,48,50,49,51,95,50,95,101,109,112,0],"i8",ALLOC_NORMAL);Ha=allocate(1,"%struct.widedbcs_index*",ALLOC_NORMAL);ta=allocate(1,"%struct.pair_encodemap*",ALLOC_NORMAL);Va=allocate([95,95,109,97,112,95,106,105,115,120,48,50,49,51,95,112,97,105,114,0],"i8",ALLOC_NORMAL);Ia=allocate(1,"i1",ALLOC_NORMAL);Wa=allocate([95,99,111,100,101,99,115,95,99,110,0],"i8",ALLOC_NORMAL);ia=allocate([95,95,109,97,112,95,103,98,99,111,109,109,111,110,0],"i8",ALLOC_NORMAL);Ba=allocate([95,95,
109,97,112,95,103,98,50,51,49,50,0],"i8",ALLOC_NORMAL);Xa=allocate([103,98,50,51,49,50,95,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);Ta=allocate([-61,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ea=allocate(8,["i32",0,0,0,"%struct.iso2022_designation*",0,0,0],ALLOC_NORMAL);Ga=allocate([-62,0,2,0,0,0,0,
0,0,0,0,0,0,0,0,0,74,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ka=allocate([5,0,0,0,0,0,0,0],["i32",0,0,0,"%struct.iso2022_designation*",
0,0,0],ALLOC_NORMAL);Fa=allocate([-62,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-60,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ma=allocate([5,0,0,0,0,0,0,0],["i32",0,0,0,"%struct.iso2022_designation*",0,0,0],ALLOC_NORMAL);La=allocate([-62,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-60,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-61,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-63,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,65,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,70,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0],["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",
0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Za=allocate([7,0,0,0,0,0,0,0],["i32",0,0,0,"%struct.iso2022_designation*",0,0,0],ALLOC_NORMAL);Ka=allocate([-47,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-62,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-47,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-48,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ra=allocate([5,0,0,0,0,0,0,0],["i32",0,0,0,"%struct.iso2022_designation*",0,0,0],ALLOC_NORMAL);
$a=allocate([-49,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-62,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-49,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-48,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ja=allocate([5,0,0,0,0,0,0,0],["i32",0,0,0,"%struct.iso2022_designation*",0,0,0],ALLOC_NORMAL);ja=allocate([-62,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,-60,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,
0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8",0,"i32 ()*",0,0,0,"i32 (i8*)*",0,0,0,"i16 (i32*, i32*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ua=allocate([5,0,0,0,0,0,0,0],["i32",0,0,0,"%struct.iso2022_designation*",0,0,0],ALLOC_NORMAL);bb=allocate(12,["i8*",0,0,0,
"%struct.dbcs_index*",0,0,0,"%struct.dbcs_index*",0,0,0],ALLOC_NORMAL);qa=allocate([105,115,111,50,48,50,50,95,107,114,0],"i8",ALLOC_NORMAL);P=allocate([105,115,111,50,48,50,50,95,106,112,0],"i8",ALLOC_NORMAL);hb=allocate([105,115,111,50,48,50,50,95,106,112,95,49,0],"i8",ALLOC_NORMAL);Qa=allocate([105,115,111,50,48,50,50,95,106,112,95,50,0],"i8",ALLOC_NORMAL);mb=allocate([105,115,111,50,48,50,50,95,106,112,95,50,48,48,52,0],"i8",ALLOC_NORMAL);S=allocate([105,115,111,50,48,50,50,95,106,112,95,51,0],
"i8",ALLOC_NORMAL);Ca=allocate([105,115,111,50,48,50,50,95,106,112,95,101,120,116,0],"i8",ALLOC_NORMAL);pa=allocate(288,["i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",
0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",
0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",
0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32 (i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i16**, i32, i8**, i32, i32)*",
0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*, i8**, i32, i16**, i32)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i32 (%union.MultibyteCodec_State*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Aa=allocate([95,99,111,100,101,99,115,
95,105,115,111,50,48,50,50,0],"i8",ALLOC_NORMAL);HEAP[q]=o;HEAP[q+4]=g+2;HEAP[q+12]=p;HEAP[Ta+4]=g+4;HEAP[Ta+8]=g+6;HEAP[Ta+12]=g+8;HEAP[Ea+4]=Ta;HEAP[Ga+4]=g+10;HEAP[Ga+8]=g+12;HEAP[Ga+12]=g+14;HEAP[Ga+24]=g+16;HEAP[Ga+28]=g+18;HEAP[Ga+36]=g+10;HEAP[Ga+40]=g+12;HEAP[Ga+44]=g+14;HEAP[ka+4]=Ga;HEAP[Fa+4]=g+10;HEAP[Fa+8]=g+12;HEAP[Fa+12]=g+14;HEAP[Fa+20]=g+20;HEAP[Fa+24]=g+22;HEAP[Fa+28]=g+24;HEAP[Fa+40]=g+16;HEAP[Fa+44]=g+18;HEAP[Fa+52]=g+10;HEAP[Fa+56]=g+12;HEAP[Fa+60]=g+14;HEAP[ma+4]=Fa;HEAP[La+
4]=g+10;HEAP[La+8]=g+12;HEAP[La+12]=g+14;HEAP[La+20]=g+20;HEAP[La+24]=g+22;HEAP[La+28]=g+24;HEAP[La+36]=g+4;HEAP[La+40]=g+6;HEAP[La+44]=g+8;HEAP[La+52]=g+26;HEAP[La+56]=g+28;HEAP[La+60]=g+30;HEAP[La+72]=g+16;HEAP[La+76]=g+18;HEAP[La+84]=g+10;HEAP[La+88]=g+12;HEAP[La+92]=g+14;HEAP[La+104]=g+32;HEAP[La+108]=g+34;HEAP[La+120]=g+32;HEAP[La+124]=g+34;HEAP[Za+4]=La;HEAP[Ka+4]=g+36;HEAP[Ka+8]=g+38;HEAP[Ka+12]=g+40;HEAP[Ka+20]=g+10;HEAP[Ka+24]=g+12;HEAP[Ka+28]=g+14;HEAP[Ka+36]=g+36;HEAP[Ka+40]=g+38;HEAP[Ka+
44]=g+42;HEAP[Ka+52]=g+36;HEAP[Ka+56]=g+44;HEAP[Ka+60]=g+46;HEAP[Ra+4]=Ka;HEAP[$a+4]=g+36;HEAP[$a+8]=g+48;HEAP[$a+12]=g+50;HEAP[$a+20]=g+10;HEAP[$a+24]=g+12;HEAP[$a+28]=g+14;HEAP[$a+36]=g+36;HEAP[$a+40]=g+48;HEAP[$a+44]=g+52;HEAP[$a+52]=g+36;HEAP[$a+56]=g+54;HEAP[$a+60]=g+56;HEAP[Ja+4]=$a;HEAP[ja+4]=g+10;HEAP[ja+8]=g+12;HEAP[ja+12]=g+14;HEAP[ja+20]=g+20;HEAP[ja+24]=g+22;HEAP[ja+28]=g+24;HEAP[ja+40]=g+16;HEAP[ja+44]=g+18;HEAP[ja+56]=g+58;HEAP[ja+60]=g+60;HEAP[ja+68]=g+10;HEAP[ja+72]=g+12;HEAP[ja+76]=
g+14;HEAP[ua+4]=ja;HEAP[bb]=p;HEAP[pa]=qa;HEAP[pa+4]=Ea;HEAP[pa+8]=g+62;HEAP[pa+12]=g+64;HEAP[pa+16]=g+66;HEAP[pa+20]=g+68;HEAP[pa+24]=g+70;HEAP[pa+28]=g+72;HEAP[pa+32]=g+74;HEAP[pa+36]=P;HEAP[pa+40]=ka;HEAP[pa+44]=g+62;HEAP[pa+48]=g+64;HEAP[pa+52]=g+66;HEAP[pa+56]=g+68;HEAP[pa+60]=g+70;HEAP[pa+64]=g+72;HEAP[pa+68]=g+74;HEAP[pa+72]=hb;HEAP[pa+76]=ma;HEAP[pa+80]=g+62;HEAP[pa+84]=g+64;HEAP[pa+88]=g+66;HEAP[pa+92]=g+68;HEAP[pa+96]=g+70;HEAP[pa+100]=g+72;HEAP[pa+104]=g+74;HEAP[pa+108]=Qa;HEAP[pa+112]=
Za;HEAP[pa+116]=g+62;HEAP[pa+120]=g+64;HEAP[pa+124]=g+66;HEAP[pa+128]=g+68;HEAP[pa+132]=g+70;HEAP[pa+136]=g+72;HEAP[pa+140]=g+74;HEAP[pa+144]=mb;HEAP[pa+148]=Ra;HEAP[pa+152]=g+62;HEAP[pa+156]=g+64;HEAP[pa+160]=g+66;HEAP[pa+164]=g+68;HEAP[pa+168]=g+70;HEAP[pa+172]=g+72;HEAP[pa+176]=g+74;HEAP[pa+180]=S;HEAP[pa+184]=Ja;HEAP[pa+188]=g+62;HEAP[pa+192]=g+64;HEAP[pa+196]=g+66;HEAP[pa+200]=g+68;HEAP[pa+204]=g+70;HEAP[pa+208]=g+72;HEAP[pa+212]=g+74;HEAP[pa+216]=Ca;HEAP[pa+220]=ua;HEAP[pa+224]=g+62;HEAP[pa+
228]=g+64;HEAP[pa+232]=g+66;HEAP[pa+236]=g+68;HEAP[pa+240]=g+70;HEAP[pa+244]=g+72;HEAP[pa+248]=g+74;HEAP[pa+252]=p}var f={arguments:[]},h,j,k,l,m,n,o,p,q,r,u,s,t,v,w,x,y,z,C,A,G,E,D,R,M,L,I,J,F,V,Q,Z,K,N,H,ba,W,B,Y,fa,ha,la,ra,ya,Da,Ua,Na,Pa,wa,Ya,Ha,ta,Va,Ia,Wa,ia,Ba,Xa,Ta,Ea,Ga,ka,Fa,ma,La,Za,Ka,Ra,$a,Ja,ja,ua,bb,qa,P,hb,Qa,mb,S,Ca,pa,Aa;f._init_codecs_iso2022=function(){var a;for(a=-1;;)switch(a){case -1:var b;b=_Py_InitModule4(Aa,q,0,0,1013);a=b!=0?1:2;break;case 1:a:{a=b;var c=STACKTOP;STACKTOP+=
256;_memset(c,0,256);for(var d=void 0,d=-1;;)switch(d){case -1:var e,f,g=c;e=a;f=bb;var h=g,j=g+7+-1,d=4;break;case 1:_llvm_memcpy_p0i8_p0i8_i32(h,r,256,1,0);_strcpy(j,HEAP[f]);d=_PyCapsule_New(f,n,0);d=_PyModule_AddObject(e,g,d);d=d==-1?2:3;break;case 2:d=6;break;case 3:f+=12;d=4;break;case 4:d=HEAP[HEAP[f]]!=0?1:5;break;case 5:d=6;break;case 6:STACKTOP=c;break a;default:assert(0,"bad label: "+d)}}a=2;break;case 2:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,
0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,o,p,q;d=b;c=(HEAP[HEAP[d+4]+84]&134217728)==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],l);e=0;c=15;break;case 2:a:{c=void 0;for(c=-1;;)switch(c){case -1:var r,s;c=HEAP[h]==0?1:5;break;case 1:s=_PyImport_ImportModuleNoBlock(j);c=s==0?2:3;break;case 2:r=0;c=6;break;case 3:c=_PyObject_GetAttrString(s,k);HEAP[h]=c;HEAP[s]-=1;c=HEAP[s]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);c=5;break;case 5:r=HEAP[h];c=6;
break;case 6:o=c=r;break a;default:assert(0,"bad label: "+c)}o=void 0}c=o==0?3:4;break;case 3:e=0;c=15;break;case 4:q=d+20;p=pa;c=7;break;case 5:c=_strcmp(HEAP[p],q)==0?8:6;break;case 6:p+=36;c=7;break;case 7:c=HEAP[HEAP[p]]!=0?5:8;break;case 8:c=HEAP[HEAP[p]]==0?9:10;break;case 9:_PyErr_SetString(HEAP[_PyExc_LookupError],m);e=0;c=15;break;case 10:f=_PyCapsule_New(p,n,0);c=f==0?11:12;break;case 11:e=0;c=15;break;case 12:g=_PyObject_CallFunctionObjArgs(o,allocate([f,0,0,0,0,0,0,0],["%struct.PyObject*",
0,0,0,"i8*",0,0,0],ALLOC_STACK));HEAP[f]-=1;c=HEAP[f]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=14;break;case 14:e=g;c=15;break;case 15:return d=e;default:assert(0,"bad label: "+c)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var c;a=HEAP[V]==0?1:4;break;case 1:a=b(Q,Z,y,0)!=0?3:2;break;case 2:a=b(Q,K,0,z)!=0?3:4;break;case 3:c=-1;a=5;break;case 4:HEAP[V]=1;c=0;a=5;break;case 5:return a=c;default:assert(0,"bad label: "+a)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d,e;c=a;b=HEAP[HEAP[z]+8*HEAP[c]]==0?5:1;break;case 1:b=HEAP[c+1]<HEAP[HEAP[z]+8*HEAP[c]+4]?5:2;break;case 2:b=HEAP[c+1]>HEAP[HEAP[z]+8*HEAP[c]+5]?5:3;break;case 3:e=HEAP[HEAP[HEAP[z]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[z]+8*HEAP[c]+4])];b=e==65534?5:4;break;case 4:d=e;b=6;break;case 5:d=65535;b=6;break;case 6:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;c=HEAP[b]!=1?1:2;break;case 1:throw ___assert_fail(N,t,594,H),"Reached an unreachable!";
case 2:c=HEAP[d]<=65535?3:8;break;case 3:c=HEAP[HEAP[y]+8*(HEAP[d]>>>8)]!=0?4:8;break;case 4:c=(HEAP[d]&255)>=HEAP[HEAP[y]+8*(HEAP[d]>>>8)+4]?5:8;break;case 5:c=(HEAP[d]&255)<=HEAP[HEAP[y]+8*(HEAP[d]>>>8)+5]?6:8;break;case 6:f=HEAP[HEAP[HEAP[y]+8*(HEAP[d]>>>8)]+2*((HEAP[d]&255)-HEAP[HEAP[y]+8*(HEAP[d]>>>8)+4])];c=f!=-1&f>=0?7:8;break;case 7:e=f;c=9;break;case 8:e=65535;c=9;break;case 9:return c=e,c&65535;default:assert(0,"bad label: "+c)}},0,a,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d,e;c=a;b=HEAP[c]!=33?3:1;break;case 1:b=HEAP[c+1]!=64?3:2;break;case 2:d=65340;b=9;break;case 3:b=HEAP[HEAP[A]+8*HEAP[c]]==0?8:4;break;case 4:b=HEAP[c+1]<HEAP[HEAP[A]+8*HEAP[c]+4]?8:5;break;case 5:b=HEAP[c+1]>HEAP[HEAP[A]+8*HEAP[c]+5]?8:6;break;case 6:e=HEAP[HEAP[HEAP[A]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[A]+8*HEAP[c]+4])];b=e==65534?8:7;break;case 7:d=e;b=9;break;case 8:d=65535;b=9;break;case 9:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,
e,f;d=a;c=HEAP[b]!=1?1:2;break;case 1:throw ___assert_fail(N,t,632,fa),"Reached an unreachable!";case 2:c=HEAP[d]<=65535?3:10;break;case 3:c=HEAP[d]==65340?4:5;break;case 4:e=8512;c=11;break;case 5:c=HEAP[HEAP[C]+8*(HEAP[d]>>>8)]!=0?6:10;break;case 6:c=(HEAP[d]&255)>=HEAP[HEAP[C]+8*(HEAP[d]>>>8)+4]?7:10;break;case 7:c=(HEAP[d]&255)<=HEAP[HEAP[C]+8*(HEAP[d]>>>8)+5]?8:10;break;case 8:f=HEAP[HEAP[HEAP[C]+8*(HEAP[d]>>>8)]+2*((HEAP[d]&255)-HEAP[HEAP[C]+8*(HEAP[d]>>>8)+4])];c=f!=-1&f>=0?9:10;break;case 9:e=
f;c=11;break;case 10:e=65535;c=11;break;case 11:return c=e,c&65535;default:assert(0,"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;var f=HEAP[c];b=HEAP[c]<=91?1:2;break;case 1:e=f;b=11;break;case 2:b=f==92?3:4;break;case 3:e=165;b=11;break;case 4:var g=HEAP[c];b=HEAP[c]<=125?5:6;break;case 5:e=g;b=11;break;case 6:b=g==126?7:8;break;case 7:e=8254;b=11;break;case 8:b=HEAP[c]==127?9:10;break;case 9:e=127;b=11;break;case 10:d=65535;b=12;break;case 11:d=e;b=12;break;
case 12:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[c]>127?4:1;break;case 1:b=HEAP[c]==92?4:2;break;case 2:b=HEAP[c]==126?4:3;break;case 3:e=HEAP[c]&65535;b=9;break;case 4:b=HEAP[c]==165?5:6;break;case 5:e=92;b=9;break;case 6:b=HEAP[c]==8254?7:8;break;case 7:e=126;b=9;break;case 8:d=65535;b=10;break;case 9:d=e;b=10;break;case 10:return a=d,a&65535;default:assert(0,"bad label: "+b)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var c;
a=HEAP[ha]==0?1:4;break;case 1:a=b(W,B,C,0)!=0?3:2;break;case 2:a=b(W,la,0,G)!=0?3:4;break;case 3:c=-1;a=5;break;case 4:HEAP[ha]=1;c=0;a=5;break;case 5:return a=c;default:assert(0,"bad label: "+a)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[HEAP[G]+8*HEAP[c]]==0?5:1;break;case 1:b=HEAP[c+1]<HEAP[HEAP[G]+8*HEAP[c]+4]?5:2;break;case 2:b=HEAP[c+1]>HEAP[HEAP[G]+8*HEAP[c]+5]?5:3;break;case 3:e=HEAP[HEAP[HEAP[G]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[G]+8*HEAP[c]+4])];b=e==65534?
5:4;break;case 4:d=e;b=6;break;case 5:d=65535;b=6;break;case 6:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;c=HEAP[b]!=1?1:2;break;case 1:throw ___assert_fail(N,t,671,ra),"Reached an unreachable!";case 2:c=HEAP[d]<=65535?3:8;break;case 3:c=HEAP[HEAP[C]+8*(HEAP[d]>>>8)]!=0?4:8;break;case 4:c=(HEAP[d]&255)>=HEAP[HEAP[C]+8*(HEAP[d]>>>8)+4]?5:8;break;case 5:c=(HEAP[d]&255)<=HEAP[HEAP[C]+8*(HEAP[d]>>>8)+5]?6:8;break;case 6:f=HEAP[HEAP[HEAP[C]+
8*(HEAP[d]>>>8)]+2*((HEAP[d]&255)-HEAP[HEAP[C]+8*(HEAP[d]>>>8)+4])];c=f!=-1&f<0?7:8;break;case 7:e=f&32767;c=9;break;case 8:e=65535;c=9;break;case 9:return c=e,c&65535;default:assert(0,"bad label: "+c)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var c;a=HEAP[Ia]==0?1:4;break;case 1:a=b(Wa,ia,J,0)!=0?3:2;break;case 2:a=b(Wa,Ba,0,F)!=0?3:4;break;case 3:c=-1;a=5;break;case 4:HEAP[Ia]=1;c=0;a=5;break;case 5:return a=c;default:assert(0,"bad label: "+a)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d,e;c=a;b=HEAP[HEAP[F]+8*HEAP[c]]==0?5:1;break;case 1:b=HEAP[c+1]<HEAP[HEAP[F]+8*HEAP[c]+4]?5:2;break;case 2:b=HEAP[c+1]>HEAP[HEAP[F]+8*HEAP[c]+5]?5:3;break;case 3:e=HEAP[HEAP[HEAP[F]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[F]+8*HEAP[c]+4])];b=e==65534?5:4;break;case 4:d=e;b=6;break;case 5:d=65535;b=6;break;case 6:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;c=HEAP[b]!=1?1:2;break;case 1:throw ___assert_fail(N,t,978,Xa),"Reached an unreachable!";
case 2:c=HEAP[d]<=65535?3:8;break;case 3:c=HEAP[HEAP[J]+8*(HEAP[d]>>>8)]!=0?4:8;break;case 4:c=(HEAP[d]&255)>=HEAP[HEAP[J]+8*(HEAP[d]>>>8)+4]?5:8;break;case 5:c=(HEAP[d]&255)<=HEAP[HEAP[J]+8*(HEAP[d]>>>8)+5]?6:8;break;case 6:f=HEAP[HEAP[HEAP[J]+8*(HEAP[d]>>>8)]+2*((HEAP[d]&255)-HEAP[HEAP[J]+8*(HEAP[d]>>>8)+4])];c=f!=-1&f>=0?7:8;break;case 7:e=f;c=9;break;case 8:e=65535;c=9;break;case 9:return c=e,c&65535;default:assert(0,"bad label: "+c)}},0,function(){return 65535},0,function(){return 65535},0,function(){var c;
for(c=-1;;)switch(c){case -1:var d;c=HEAP[ya]==0?1:10;break;case 1:c=a()!=0?9:2;break;case 2:c=b(W,Da,E,0)!=0?9:3;break;case 3:c=b(W,Ua,0,D)!=0?9:4;break;case 4:c=b(W,Na,0,R)!=0?9:5;break;case 5:c=b(W,Pa,M,0)!=0?9:6;break;case 6:c=b(W,wa,0,L)!=0?9:7;break;case 7:c=b(W,Ya,0,I)!=0?9:8;break;case 8:c=b(W,Va,ta,Ha)!=0?9:10;break;case 9:d=-1;c=11;break;case 10:HEAP[ya]=1;d=0;c=11;break;case 11:return c=d;default:assert(0,"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;
b=HEAP[c]!=33?3:1;break;case 1:b=HEAP[c+1]!=64?3:2;break;case 2:d=65340;b=22;break;case 3:b=HEAP[HEAP[A]+8*HEAP[c]]==0?7:4;break;case 4:b=HEAP[c+1]<HEAP[HEAP[A]+8*HEAP[c]+4]?7:5;break;case 5:b=HEAP[c+1]>HEAP[HEAP[A]+8*HEAP[c]+5]?7:6;break;case 6:e=HEAP[HEAP[HEAP[A]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[A]+8*HEAP[c]+4])];b=e==65534?7:21;break;case 7:b=HEAP[HEAP[D]+8*HEAP[c]]==0?11:8;break;case 8:b=HEAP[c+1]<HEAP[HEAP[D]+8*HEAP[c]+4]?11:9;break;case 9:b=HEAP[c+1]>HEAP[HEAP[D]+8*HEAP[c]+5]?11:10;break;case 10:e=
HEAP[HEAP[HEAP[D]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[D]+8*HEAP[c]+4])];b=e==65534?11:21;break;case 11:b=HEAP[HEAP[L]+8*HEAP[c]]==0?16:12;break;case 12:b=HEAP[c+1]<HEAP[HEAP[L]+8*HEAP[c]+4]?16:13;break;case 13:b=HEAP[c+1]>HEAP[HEAP[L]+8*HEAP[c]+5]?16:14;break;case 14:e=HEAP[HEAP[HEAP[L]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[L]+8*HEAP[c]+4])];b=e==65534?16:15;break;case 15:e|=131072;b=21;break;case 16:b=HEAP[HEAP[Ha]+8*HEAP[c]]==0?20:17;break;case 17:b=HEAP[c+1]<HEAP[HEAP[Ha]+8*HEAP[c]+4]?20:18;break;case 18:b=
HEAP[c+1]>HEAP[HEAP[Ha]+8*HEAP[c]+5]?20:19;break;case 19:e=HEAP[HEAP[HEAP[Ha]+8*HEAP[c]]+4*(HEAP[c+1]-HEAP[HEAP[Ha]+8*HEAP[c]+4])];b=e==65534?20:21;break;case 20:d=65535;b=22;break;case 21:d=e;b=22;break;case 22:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=a;f=b;d=HEAP[f];e=c(e,f,0);d=d==1?1:d==2?4:7;break;case 1:d=e==-2?2:3;break;case 2:g=65534;d=8;break;case 3:g=65535;d=8;break;case 4:d=HEAP[f]!=2?5:6;break;case 5:g=65535;d=8;break;
case 6:g=e;d=8;break;case 7:g=65535;d=8;break;case 8:return f=g,f&65535;default:assert(0,"bad label: "+d)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g=f=c(a,b,0);d=f==-1|f==-2?1:2;break;case 1:e=g;d=5;break;case 2:d=g<0?3:4;break;case 3:e=65535;d=5;break;case 4:e=f;d=5;break;case 5:return d=e,d&65535;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[HEAP[R]+8*HEAP[c]]==0?4:1;break;case 1:b=HEAP[c+1]<HEAP[HEAP[R]+8*HEAP[c]+4]?
4:2;break;case 2:b=HEAP[c+1]>HEAP[HEAP[R]+8*HEAP[c]+5]?4:3;break;case 3:e=HEAP[HEAP[HEAP[R]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[R]+8*HEAP[c]+4])];b=e==65534?4:10;break;case 4:b=HEAP[HEAP[I]+8*HEAP[c]]==0?9:5;break;case 5:b=HEAP[c+1]<HEAP[HEAP[I]+8*HEAP[c]+4]?9:6;break;case 6:b=HEAP[c+1]>HEAP[HEAP[I]+8*HEAP[c]+5]?9:7;break;case 7:e=HEAP[HEAP[HEAP[I]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[I]+8*HEAP[c]+4])];b=e==65534?9:8;break;case 8:e|=131072;b=10;break;case 9:d=65535;b=11;break;case 10:d=e;b=11;break;case 11:return a=
d;default:assert(0,"bad label: "+b)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g=f=c(a,b,0);d=f==-1|f==-2?1:2;break;case 1:e=g;d=5;break;case 2:d=g<0?3:4;break;case 3:e=f&32767;d=5;break;case 4:e=65535;d=5;break;case 5:return d=e,d&65535;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[c]!=46?2:1;break;case 1:b=HEAP[c+1]==33?20:2;break;case 2:b=HEAP[c]!=47?4:3;break;case 3:b=HEAP[c+1]==126?20:4;break;case 4:b=HEAP[c]!=79?6:
5;break;case 5:b=HEAP[c+1]==84?20:6;break;case 6:b=HEAP[c]!=79?8:7;break;case 7:b=HEAP[c+1]==126?20:8;break;case 8:b=HEAP[c]!=116?10:9;break;case 9:b=HEAP[c+1]==39?20:10;break;case 10:b=HEAP[c]!=126?12:11;break;case 11:b=HEAP[c+1]==122?20:12;break;case 12:b=HEAP[c]!=126?14:13;break;case 13:b=HEAP[c+1]==123?20:14;break;case 14:b=HEAP[c]!=126?16:15;break;case 15:b=HEAP[c+1]==124?20:16;break;case 16:b=HEAP[c]!=126?18:17;break;case 17:b=HEAP[c+1]==125?20:18;break;case 18:b=HEAP[c]!=126?21:19;break;case 19:b=
HEAP[c+1]==126?20:21;break;case 20:d=65535;b=43;break;case 21:b=HEAP[c]!=33?24:22;break;case 22:b=HEAP[c+1]!=64?24:23;break;case 23:d=65340;b=43;break;case 24:b=HEAP[HEAP[A]+8*HEAP[c]]==0?28:25;break;case 25:b=HEAP[c+1]<HEAP[HEAP[A]+8*HEAP[c]+4]?28:26;break;case 26:b=HEAP[c+1]>HEAP[HEAP[A]+8*HEAP[c]+5]?28:27;break;case 27:e=HEAP[HEAP[HEAP[A]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[A]+8*HEAP[c]+4])];b=e==65534?28:42;break;case 28:b=HEAP[HEAP[D]+8*HEAP[c]]==0?32:29;break;case 29:b=HEAP[c+1]<HEAP[HEAP[D]+
8*HEAP[c]+4]?32:30;break;case 30:b=HEAP[c+1]>HEAP[HEAP[D]+8*HEAP[c]+5]?32:31;break;case 31:e=HEAP[HEAP[HEAP[D]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[D]+8*HEAP[c]+4])];b=e==65534?32:42;break;case 32:b=HEAP[HEAP[L]+8*HEAP[c]]==0?37:33;break;case 33:b=HEAP[c+1]<HEAP[HEAP[L]+8*HEAP[c]+4]?37:34;break;case 34:b=HEAP[c+1]>HEAP[HEAP[L]+8*HEAP[c]+5]?37:35;break;case 35:e=HEAP[HEAP[HEAP[L]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[L]+8*HEAP[c]+4])];b=e==65534?37:36;break;case 36:e|=131072;b=42;break;case 37:b=HEAP[HEAP[Ha]+
8*HEAP[c]]==0?41:38;break;case 38:b=HEAP[c+1]<HEAP[HEAP[Ha]+8*HEAP[c]+4]?41:39;break;case 39:b=HEAP[c+1]>HEAP[HEAP[Ha]+8*HEAP[c]+5]?41:40;break;case 40:e=HEAP[HEAP[HEAP[Ha]+8*HEAP[c]]+4*(HEAP[c+1]-HEAP[HEAP[Ha]+8*HEAP[c]+4])];b=e==65534?41:42;break;case 41:d=65535;b=43;break;case 42:d=e;b=43;break;case 43:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=a;f=b;d=HEAP[f];e=c(e,f,2E3);d=d==1?1:d==2?4:7;break;case 1:d=e==-2?2:3;break;case 2:g=
65534;d=8;break;case 3:g=65535;d=8;break;case 4:d=HEAP[f]!=2?5:6;break;case 5:g=65535;d=8;break;case 6:g=e;d=8;break;case 7:g=65535;d=8;break;case 8:return f=g,f&65535;default:assert(0,"bad label: "+d)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g=f=c(a,b,2E3);d=f==-1|f==-2?1:2;break;case 1:e=g;d=5;break;case 2:d=g<0?3:4;break;case 3:e=65535;d=5;break;case 4:e=f;d=5;break;case 5:return d=e,d&65535;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d,e;c=a;b=HEAP[c]==125?1:3;break;case 1:b=HEAP[c+1]==59?2:3;break;case 2:e=39709;b=3;break;case 3:b=HEAP[HEAP[R]+8*HEAP[c]]==0?7:4;break;case 4:b=HEAP[c+1]<HEAP[HEAP[R]+8*HEAP[c]+4]?7:5;break;case 5:b=HEAP[c+1]>HEAP[HEAP[R]+8*HEAP[c]+5]?7:6;break;case 6:e=HEAP[HEAP[HEAP[R]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[R]+8*HEAP[c]+4])];b=e==65534?7:13;break;case 7:b=HEAP[HEAP[I]+8*HEAP[c]]==0?12:8;break;case 8:b=HEAP[c+1]<HEAP[HEAP[I]+8*HEAP[c]+4]?12:9;break;case 9:b=HEAP[c+1]>HEAP[HEAP[I]+8*HEAP[c]+5]?12:10;
break;case 10:e=HEAP[HEAP[HEAP[I]+8*HEAP[c]]+2*(HEAP[c+1]-HEAP[HEAP[I]+8*HEAP[c]+4])];b=e==65534?12:11;break;case 11:e|=131072;b=13;break;case 12:d=65535;b=14;break;case 13:d=e;b=14;break;case 14:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g=f=c(a,b,2E3);d=f==-1|f==-2?1:2;break;case 1:e=g;d=5;break;case 2:d=g<0?3:4;break;case 3:e=f&32767;d=5;break;case 4:e=65535;d=5;break;case 5:return d=e,d&65535;default:assert(0,"bad label: "+d)}},0,
function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=(HEAP[c]^-128)<=160?3:1;break;case 1:b=(HEAP[c]^-128)>223?3:2;break;case 2:d=b=(HEAP[c]^-128)+65216;b=4;break;case 3:d=65535;b=4;break;case 4:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c]<=65376?3:1;break;case 1:b=HEAP[c]>65439?3:2;break;case 2:b=(HEAP[c]&65535)- -320;d=b-128;b=4;break;case 3:d=65535;b=4;break;case 4:return a=d,a&65535;default:assert(0,"bad label: "+
b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;d=HEAP[a+4];b=5;break;case 1:b=HEAP[d+4]!=0?2:4;break;case 2:b=FUNCTION_TABLE[HEAP[d+4]]()!=0?3:4;break;case 3:c=-1;b=7;break;case 4:d+=16;b=5;break;case 5:b=HEAP[d]!=0?1:6;break;case 6:c=0;b=7;break;case 7:return a=c;default:assert(0,"bad label: "+b)}},0,function(a,b,c,d,e,f,g){var h=STACKTOP;STACKTOP+=16;_memset(h,0,16);var j,k=null;for(j=-1;;)switch(j){case -1:var l,m,n,o,p,q,r,u,B,P,w,H=h,x,F=h+4,k=h+8;l=a;m=b;n=c;o=d;p=e;q=f;r=g;var S=
k,y=k+4,N=k,k=-1;j=77;break;case 1:HEAP[H]=HEAP[HEAP[n]];j=HEAP[H]<=127?2:13;break;case 2:j=HEAP[l]!=66?3:6;break;case 3:j=q<=2?4:5;break;case 4:B=-1;j=79;break;case 5:HEAP[HEAP[p]]=27;HEAP[HEAP[p]+1]=40;HEAP[HEAP[p]+2]=66;HEAP[l]=66;HEAP[p]+=3;q-=3;j=6;break;case 6:var z=q;(HEAP[l+4]&1)!=0?(k=6,j=7):(k=6,j=10);break;case 7:j=z<=0?8:9;break;case 8:B=-1;j=79;break;case 9:HEAP[HEAP[p]]=15;HEAP[l+4]&=-2;HEAP[p]+=1;var A=q-1;q=A;k=9;j=10;break;case 10:j=(k==9?A:z)<=0?11:12;break;case 11:B=-1;j=79;break;
case 12:HEAP[HEAP[p]]=HEAP[H]&255;HEAP[n]+=2;o-=1;HEAP[p]+=1;q-=1;var Q=o,k=12;j=77;break;case 13:var K=HEAP[H];K>>>10==54?(k=13,j=14):(k=13,j=18);break;case 14:j=o<=1?15:16;break;case 15:B=-2;j=79;break;case 16:var Aa=HEAP[H];HEAP[HEAP[n]+2]>>>10==55?(k=16,j=17):(k=16,j=18);break;case 17:var W=(Aa-55296)*1024+9216+HEAP[HEAP[n]+2];HEAP[H]=W;k=17;j=18;break;case 18:j=(k==17?W:k==13?K:Aa)>65535?19:20;break;case 19:u=2;j=21;break;case 20:u=1;j=21;break;case 21:x=u;w=-1;P=HEAP[m+4];j=32;break;case 22:HEAP[F]=
1;w=FUNCTION_TABLE[HEAP[P+12]](H,F);j=w==-2?23:30;break;case 23:j=o<=1?24:26;break;case 24:j=(r&1)==0?25:27;break;case 25:B=-2;j=79;break;case 26:HEAP[F]=2;HEAP[S]=HEAP[HEAP[n]];HEAP[y]=HEAP[HEAP[n]+2];var C=FUNCTION_TABLE[HEAP[P+12]](N,F);w=C;k=26;j=28;break;case 27:HEAP[F]=-1;var I=FUNCTION_TABLE[HEAP[P+12]](H,F);w=I;k=27;j=28;break;case 28:j=(k==27?I:C)!=-1?29:31;break;case 29:x=HEAP[F];j=33;break;case 30:j=w!=-1?33:31;break;case 31:P+=16;j=32;break;case 32:j=HEAP[P]!=0?22:33;break;case 33:j=HEAP[P]==
0?34:35;break;case 34:B=1;j=79;break;case 35:j=HEAP[P+2]!=1?36:38;break;case 36:j=HEAP[P+2]!=2?37:38;break;case 37:throw ___assert_fail(s,t,219,v),"Reached an unreachable!";case 38:j=HEAP[P+1];j=j==0?39:j==1?55:67;break;case 39:j=(HEAP[l+4]&1)!=0?40:43;break;case 40:j=q<=0?41:42;break;case 41:B=-1;j=79;break;case 42:HEAP[HEAP[p]]=15;HEAP[l+4]&=-2;HEAP[p]+=1;q-=1;j=43;break;case 43:j=HEAP[l]!=HEAP[P]?44:68;break;case 44:j=HEAP[P+2]==1?45:48;break;case 45:j=q<=2?46:47;break;case 46:B=-1;j=79;break;
case 47:HEAP[HEAP[p]]=27;HEAP[HEAP[p]+1]=40;HEAP[HEAP[p]+2]=HEAP[P]&127;HEAP[l]=HEAP[P];HEAP[p]+=3;var D=q-3;q=D;k=47;j=69;break;case 48:var E=q;j=HEAP[P]==-62?49:52;break;case 49:j=E<=2?50:51;break;case 50:B=-1;j=79;break;case 51:HEAP[HEAP[p]]=27;HEAP[HEAP[p]+1]=36;HEAP[HEAP[p]+2]=HEAP[P]&127;HEAP[l]=HEAP[P];HEAP[p]+=3;var J=q-3;q=J;k=51;j=69;break;case 52:j=E<=3?53:54;break;case 53:B=-1;j=79;break;case 54:HEAP[HEAP[p]]=27;HEAP[HEAP[p]+1]=36;HEAP[HEAP[p]+2]=40;HEAP[HEAP[p]+3]=HEAP[P]&127;HEAP[l]=
HEAP[P];HEAP[p]+=4;var ba=q-4;q=ba;k=54;j=69;break;case 55:j=HEAP[l+1]!=HEAP[P]?56:63;break;case 56:var G=q;j=HEAP[P+2]==1?57:60;break;case 57:j=G<=2?58:59;break;case 58:B=-1;j=79;break;case 59:HEAP[HEAP[p]]=27;HEAP[HEAP[p]+1]=41;HEAP[HEAP[p]+2]=HEAP[P]&127;HEAP[l+1]=HEAP[P];HEAP[p]+=3;q-=3;j=63;break;case 60:j=G<=3?61:62;break;case 61:B=-1;j=79;break;case 62:HEAP[HEAP[p]]=27;HEAP[HEAP[p]+1]=36;HEAP[HEAP[p]+2]=41;HEAP[HEAP[p]+3]=HEAP[P]&127;HEAP[l+1]=HEAP[P];HEAP[p]+=4;q-=4;j=63;break;case 63:j=(HEAP[l+
4]&1)==0?64:68;break;case 64:j=q<=0?65:66;break;case 65:B=-1;j=79;break;case 66:HEAP[HEAP[p]]=14;HEAP[l+4]|=1;HEAP[p]+=1;var Y=q-1;q=Y;k=66;j=69;break;case 67:B=-3;j=79;break;case 68:var pa=q,k=68;j=69;break;case 69:var Ca=k==68?pa:k==66?Y:k==47?D:k==51?J:ba;j=HEAP[P+2]==1?70:73;break;case 70:j=Ca<=0?71:72;break;case 71:B=-1;j=79;break;case 72:HEAP[HEAP[p]]=w&255;HEAP[p]+=1;q-=1;j=76;break;case 73:j=Ca<=1?74:75;break;case 74:B=-1;j=79;break;case 75:HEAP[HEAP[p]]=w>>>8&255;HEAP[HEAP[p]+1]=w&255;HEAP[p]+=
2;q-=2;j=76;break;case 76:HEAP[n]+=2*x;var zb=o-x;o=zb;k=76;j=77;break;case 77:j=(k==-1?d:k==76?zb:Q)>0?1:78;break;case 78:B=0;j=79;break;case 79:return a=B,STACKTOP=h,a;default:assert(0,"bad label: "+j)}},0,function(a){HEAP[a+4]=0;HEAP[a]=66;HEAP[a+1]=66;return 0},0,function(a,b,c,d){for(b=-1;;)switch(b){case -1:var e,f,g,h;e=a;f=c;g=d;b=(HEAP[e+4]&1)!=0?1:4;break;case 1:b=g<=0?2:3;break;case 2:h=-1;b=9;break;case 3:HEAP[HEAP[f]]=15;HEAP[f]+=1;g-=1;HEAP[e+4]&=-2;b=4;break;case 4:b=HEAP[e]!=66?5:
8;break;case 5:b=g<=2?6:7;break;case 6:h=-1;b=9;break;case 7:HEAP[HEAP[f]]=27;HEAP[HEAP[f]+1]=40;HEAP[HEAP[f]+2]=66;HEAP[f]+=3;g-=3;HEAP[e]=66;b=8;break;case 8:h=0;b=9;break;case 9:return a=h;default:assert(0,"bad label: "+b)}},0,function(a,b,c,d,e,f){var g=STACKTOP;STACKTOP+=8;_memset(g,0,8);var h,j=null;for(h=-1;;)switch(h){case -1:var k,l,m,n=g,o,p=g+4,q,r,s,u,B,P,v;k=a;l=b;m=c;HEAP[n]=d;o=e;HEAP[p]=f;r=0;j=-1;h=67;break;case 1:s=HEAP[HEAP[m]];h=(HEAP[k+4]&2)!=0?2:6;break;case 2:h=HEAP[p]<=0?3:
4;break;case 3:q=-1;h=69;break;case 4:HEAP[HEAP[o]]=s;HEAP[m]+=1;HEAP[n]-=1;HEAP[o]+=2;HEAP[p]-=1;h=s>64&s<=90|s==64?5:66;break;case 5:HEAP[k+4]&=-3;h=66;break;case 6:h=s;h=h==10?29:h==14?27:h==15?25:h==27?7:32;break;case 7:h=HEAP[n]<=1?8:9;break;case 8:q=-2;h=69;break;case 9:h=HEAP[HEAP[m]+1]==40?14:10;break;case 10:h=HEAP[HEAP[m]+1]==41?14:11;break;case 11:h=HEAP[HEAP[m]+1]==36?14:12;break;case 12:h=HEAP[HEAP[m]+1]==46?14:13;break;case 13:h=HEAP[HEAP[m]+1]==38?14:16;break;case 14:a:{u=l;h=k;for(var H=
m,F=n,S=void 0,y=null,S=-1;;)switch(S){case -1:var N,z,A,Q,K,Aa,W,C,I,D;N=u;z=h;A=H;Q=F;C=1;y=-1;S=13;break;case 1:S=HEAP[Q]<=C?2:3;break;case 2:K=-2;S=50;break;case 3:S=HEAP[HEAP[A]+C]<=64?5:4;break;case 4:S=HEAP[HEAP[A]+C]<=90?6:5;break;case 5:S=HEAP[HEAP[A]+C]==64?6:7;break;case 6:var E=C;I=E+1;y=6;S=15;break;case 7:S=(HEAP[N]&4)!=0?8:12;break;case 8:S=C+1<HEAP[Q]?9:12;break;case 9:S=HEAP[HEAP[A]+C]==38?10:12;break;case 10:S=HEAP[HEAP[A]+(C+1)]==64?11:12;break;case 11:C+=2;S=12;break;case 12:var J=
C+1;C=J;y=12;S=13;break;case 13:S=(y==12?J:1)<=15?1:14;break;case 14:var ba=C,y=14,S=15;break;case 15:S=(y==14?ba:E)>15?16:17;break;case 16:K=1;S=50;break;case 17:S=I;S=S==3?18:S==4?28:S==6?35:41;break;case 18:var G=HEAP[HEAP[A]+2],S=HEAP[HEAP[A]+1]==36?19:20;break;case 19:Aa=G|-128;W=0;S=43;break;case 20:Aa=G;S=HEAP[HEAP[A]+1]==40?21:22;break;case 21:W=0;S=42;break;case 22:S=HEAP[HEAP[A]+1]==41?23:24;break;case 23:W=1;S=42;break;case 24:S=(HEAP[N]&2)==0?27:25;break;case 25:S=HEAP[HEAP[A]+1]!=46?
27:26;break;case 26:W=2;S=42;break;case 27:K=3;S=50;break;case 28:S=HEAP[HEAP[A]+1]!=36?29:30;break;case 29:K=4;S=50;break;case 30:Aa=HEAP[HEAP[A]+3]|-128;S=HEAP[HEAP[A]+2]==40?31:32;break;case 31:W=0;S=42;break;case 32:S=HEAP[HEAP[A]+2]==41?33:34;break;case 33:W=1;S=42;break;case 34:K=4;S=50;break;case 35:S=(HEAP[N]&4)==0?40:36;break;case 36:S=HEAP[HEAP[A]+3]!=27?40:37;break;case 37:S=HEAP[HEAP[A]+4]!=36?40:38;break;case 38:S=HEAP[HEAP[A]+5]!=66?40:39;break;case 39:Aa=-62;W=0;S=43;break;case 40:K=
6;S=50;break;case 41:K=I;S=50;break;case 42:S=Aa!=66?43:49;break;case 43:D=HEAP[N+4];S=46;break;case 44:S=HEAP[D]==Aa?47:45;break;case 45:D+=16;S=46;break;case 46:S=HEAP[D]!=0?44:47;break;case 47:S=HEAP[D]==0?48:49;break;case 48:K=I;S=50;break;case 49:HEAP[z+W]=Aa;HEAP[Q]-=I;HEAP[A]+=I;K=0;S=50;break;case 50:h=u=K;break a;default:assert(0,"bad label: "+S)}h=void 0}u=h;h=h!=0?15:66;break;case 15:q=u;h=69;break;case 16:h=(HEAP[l]&2)==0?22:17;break;case 17:h=HEAP[HEAP[m]+1]!=78?22:18;break;case 18:h=
HEAP[n]<=2?19:20;break;case 19:q=-2;h=69;break;case 20:a:{u=k;h=m;H=n;F=o;y=p;S=void 0;for(S=-1;;)switch(S){case -1:var Y,pa,Ca,zb,Z,M;Y=u;pa=h;Ca=H;zb=F;Z=y;S=HEAP[Y+2]==65?1:4;break;case 1:S=HEAP[HEAP[pa]+2]>=0?2:3;break;case 2:HEAP[HEAP[zb]]=HEAP[HEAP[pa]+2]+128;S=27;break;case 3:M=3;S=28;break;case 4:S=HEAP[Y+2]==70?5:22;break;case 5:S=(HEAP[HEAP[pa]+2]^-128)<=159?6:7;break;case 6:HEAP[HEAP[zb]]=HEAP[HEAP[pa]+2]^-128;S=27;break;case 7:S=(HEAP[HEAP[pa]+2]^-128)>191?10:8;break;case 8:S=((680475593>>
(HEAP[HEAP[pa]+2]^-128)-160&1)!=0^1)!=0?10:9;break;case 9:HEAP[HEAP[zb]]=HEAP[HEAP[pa]+2]^-128;S=27;break;case 10:S=(HEAP[HEAP[pa]+2]^-128)<=179?15:11;break;case 11:S=HEAP[HEAP[pa]+2]==127?15:12;break;case 12:S=(HEAP[HEAP[pa]+2]^-128)>211?14:13;break;case 13:S=(1<<(HEAP[HEAP[pa]+2]^-128)-180&-1073742473)!=0?14:15;break;case 14:HEAP[HEAP[zb]]=(HEAP[HEAP[pa]+2]^-128)+720;S=27;break;case 15:S=HEAP[HEAP[pa]+2]==33?16:17;break;case 16:HEAP[HEAP[zb]]=8216;S=27;break;case 17:S=HEAP[HEAP[pa]+2]==34?18:19;
break;case 18:HEAP[HEAP[zb]]=8217;S=27;break;case 19:S=HEAP[HEAP[pa]+2]==47?20:21;break;case 20:HEAP[HEAP[zb]]=8213;S=27;break;case 21:M=3;S=28;break;case 22:S=HEAP[Y+2]==66?23:26;break;case 23:S=HEAP[HEAP[pa]+2]<0?24:25;break;case 24:M=3;S=28;break;case 25:HEAP[HEAP[zb]]=HEAP[HEAP[pa]+2];S=27;break;case 26:M=-3;S=28;break;case 27:HEAP[pa]+=3;HEAP[Ca]-=3;HEAP[zb]+=2;HEAP[Z]-=1;M=0;S=28;break;case 28:u=M;break a;default:assert(0,"bad label: "+S)}u=void 0}h=u!=0?21:66;break;case 21:q=u;h=69;break;case 22:h=
HEAP[p]<=0?23:24;break;case 23:q=-1;h=69;break;case 24:HEAP[HEAP[o]]=27;HEAP[k+4]|=2;HEAP[m]+=1;HEAP[n]-=1;HEAP[o]+=2;HEAP[p]-=1;h=66;break;case 25:h=(HEAP[l]&1)!=0?39:26;break;case 26:HEAP[k+4]&=-2;HEAP[m]+=1;var V=HEAP[n]-1;HEAP[n]=V;j=26;h=67;break;case 27:h=(HEAP[l]&1)!=0?39:28;break;case 28:HEAP[k+4]|=1;HEAP[m]+=1;var L=HEAP[n]-1;HEAP[n]=L;j=28;h=67;break;case 29:HEAP[k+4]&=-2;h=HEAP[p]<=0?30:31;break;case 30:q=-1;h=69;break;case 31:HEAP[HEAP[o]]=10;HEAP[m]+=1;HEAP[n]-=1;HEAP[o]+=2;HEAP[p]-=
1;h=66;break;case 32:h=s<=31?39:33;break;case 33:h=s<0?34:35;break;case 34:q=1;h=69;break;case 35:var R=k;h=(HEAP[k+4]&1)!=0?36:37;break;case 36:var vb=HEAP[R+1];P=vb;j=36;h=38;break;case 37:var Da=HEAP[R];P=Da;j=37;h=38;break;case 38:h=(j==37?Da:vb)==66?39:42;break;case 39:h=HEAP[p]<=0?40:41;break;case 40:q=-1;h=69;break;case 41:HEAP[HEAP[o]]=s;HEAP[m]+=1;HEAP[n]-=1;HEAP[o]+=2;HEAP[p]-=1;h=66;break;case 42:h=r==0?45:43;break;case 43:h=HEAP[r]!=P?45:44;break;case 44:B=r;h=50;break;case 45:var mb=
B=HEAP[l+4];HEAP[B]!=P?(j=45,h=46):(j=45,h=47);break;case 46:var fa=B=(j==46?fa:mb)+16;HEAP[B]!=P?h=j=46:(j=46,h=47);break;case 47:h=HEAP[j==45?mb:fa]==0?48:49;break;case 48:throw ___assert_fail(w,t,511,x),"Reached an unreachable!";case 49:r=B;h=50;break;case 50:h=HEAP[B+2]>HEAP[n]?51:52;break;case 51:q=-2;h=69;break;case 52:v=FUNCTION_TABLE[HEAP[B+8]](HEAP[m]);h=v==65535?53:54;break;case 53:q=HEAP[B+2];h=69;break;case 54:h=v<=65535?55:58;break;case 55:h=HEAP[p]<=0?56:57;break;case 56:q=-1;h=69;break;
case 57:HEAP[HEAP[o]]=v&65535;HEAP[o]+=2;HEAP[p]-=1;h=65;break;case 58:var Fb=HEAP[p]<=1;h=v<=196607?59:62;break;case 59:h=Fb?60:61;break;case 60:q=-1;h=69;break;case 61:HEAP[HEAP[o]]=(v-65536>>>10&65535)+-10240;HEAP[HEAP[o]+2]=(v&1023)+-9216;HEAP[o]+=4;HEAP[p]-=2;h=65;break;case 62:h=Fb?63:64;break;case 63:q=-1;h=69;break;case 64:HEAP[HEAP[o]]=v>>>16&65535;HEAP[HEAP[o]+2]=v&65535;HEAP[o]+=4;HEAP[p]-=2;h=65;break;case 65:HEAP[m]+=HEAP[B+2];var Pb=HEAP[n]-HEAP[B+2];HEAP[n]=Pb;j=65;h=67;break;case 66:var Wa=
HEAP[n],j=66;h=67;break;case 67:h=(j==-1?d:j==66?Wa:j==65?Pb:j==28?L:V)>0?1:68;break;case 68:q=0;h=69;break;case 69:return a=q,STACKTOP=g,a;default:assert(0,"bad label: "+h)}},0,function(a){HEAP[a+4]=0;HEAP[a]=66;HEAP[a+1]=66;HEAP[a+2]=66;return 0},0,function(a){HEAP[a]=66;HEAP[a+4]&=-2;return 0},0]);f.run=d;d();return f});