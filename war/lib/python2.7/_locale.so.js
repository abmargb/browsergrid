(function(g){function e(a){var b,c=null;for(b=-1;;)switch(b){case -1:var d,e,f,g,h;d=a;h=0;b=HEAP[d]==0?1:2;break;case 1:e=_PyList_New(0);b=22;break;case 2:f=0;b=4;break;case 3:f+=1;b=4;break;case 4:b=HEAP[d+f]==0?6:5;break;case 5:b=HEAP[d+f]!=127?3:6;break;case 6:g=b=_PyList_New(f+1);b=b==0?7:8;break;case 7:e=0;b=22;break;case 8:f=-1;b=9;break;case 9:f+=1;h=b=_PyInt_FromLong(HEAP[d+f]);b=b==0?16:10;break;case 10:b=_PyList_SetItem(g,f,h)!=
0?11:14;break;case 11:HEAP[h]-=1;b=HEAP[h]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);b=13;break;case 13:h=0;b=16;break;case 14:b=HEAP[d+f]==0?17:15;break;case 15:b=HEAP[d+f]!=127?9:17;break;case 16:var j=g,c=16;b=18;break;case 17:var k=g;h==0?(c=17,b=18):(c=17,b=21);break;case 18:HEAP[g]=HEAP[c==16?j:k]-1;b=HEAP[g]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=20;break;case 20:e=0;b=22;break;case 21:e=k;b=22;break;case 22:return a=e;default:assert(0,"bad label: "+
b)}}function b(){c=allocate([83,117,112,112,111,114,116,32,102,111,114,32,80,79,83,73,88,32,108,111,99,97,108,101,115,46,0],"i8",ALLOC_NORMAL);d=allocate([40,105,110,116,101,103,101,114,44,115,116,114,105,110,103,61,78,111,110,101,41,32,45,62,32,115,116,114,105,110,103,46,32,65,99,116,105,118,97,116,101,115,47,113,117,101,114,105,101,115,32,108,111,99,97,108,101,32,112,114,111,99,101,115,115,105,110,103,46,0],"i8",ALLOC_NORMAL);f=allocate([115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);h=allocate([115,
116,114,111,112,0],"i8",ALLOC_NORMAL);j=allocate([117,112,112,101,114,99,97,115,101,0],"i8",ALLOC_NORMAL);k=allocate([108,111,119,101,114,99,97,115,101,0],"i8",ALLOC_NORMAL);l=allocate([108,101,116,116,101,114,115,0],"i8",ALLOC_NORMAL);m=allocate([105,124,122,58,115,101,116,108,111,99,97,108,101,0],"i8",ALLOC_NORMAL);n=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);o=allocate([117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,115,101,116,116,105,110,103,0],"i8",ALLOC_NORMAL);p=
allocate([108,111,99,97,108,101,32,113,117,101,114,121,32,102,97,105,108,101,100,0],"i8",ALLOC_NORMAL);q=allocate([40,41,32,45,62,32,100,105,99,116,46,32,82,101,116,117,114,110,115,32,110,117,109,101,114,105,99,32,97,110,100,32,109,111,110,101,116,97,114,121,32,108,111,99,97,108,101,45,115,112,101,99,105,102,105,99,32,112,97,114,97,109,101,116,101,114,115,46,0],"i8",ALLOC_NORMAL);r=allocate([100,101,99,105,109,97,108,95,112,111,105,110,116,0],"i8",ALLOC_NORMAL);u=allocate([116,104,111,117,115,97,
110,100,115,95,115,101,112,0],"i8",ALLOC_NORMAL);s=allocate([103,114,111,117,112,105,110,103,0],"i8",ALLOC_NORMAL);t=allocate([105,110,116,95,99,117,114,114,95,115,121,109,98,111,108,0],"i8",ALLOC_NORMAL);v=allocate([99,117,114,114,101,110,99,121,95,115,121,109,98,111,108,0],"i8",ALLOC_NORMAL);w=allocate([109,111,110,95,100,101,99,105,109,97,108,95,112,111,105,110,116,0],"i8",ALLOC_NORMAL);x=allocate([109,111,110,95,116,104,111,117,115,97,110,100,115,95,115,101,112,0],"i8",ALLOC_NORMAL);y=allocate([109,
111,110,95,103,114,111,117,112,105,110,103,0],"i8",ALLOC_NORMAL);z=allocate([112,111,115,105,116,105,118,101,95,115,105,103,110,0],"i8",ALLOC_NORMAL);C=allocate([110,101,103,97,116,105,118,101,95,115,105,103,110,0],"i8",ALLOC_NORMAL);A=allocate([105,110,116,95,102,114,97,99,95,100,105,103,105,116,115,0],"i8",ALLOC_NORMAL);G=allocate([102,114,97,99,95,100,105,103,105,116,115,0],"i8",ALLOC_NORMAL);E=allocate([112,95,99,115,95,112,114,101,99,101,100,101,115,0],"i8",ALLOC_NORMAL);D=allocate([112,95,115,
101,112,95,98,121,95,115,112,97,99,101,0],"i8",ALLOC_NORMAL);R=allocate([110,95,99,115,95,112,114,101,99,101,100,101,115,0],"i8",ALLOC_NORMAL);M=allocate([110,95,115,101,112,95,98,121,95,115,112,97,99,101,0],"i8",ALLOC_NORMAL);L=allocate([112,95,115,105,103,110,95,112,111,115,110,0],"i8",ALLOC_NORMAL);I=allocate([110,95,115,105,103,110,95,112,111,115,110,0],"i8",ALLOC_NORMAL);J=allocate([115,116,114,105,110,103,44,115,116,114,105,110,103,32,45,62,32,105,110,116,46,32,67,111,109,112,97,114,101,115,
32,116,119,111,32,115,116,114,105,110,103,115,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,108,111,99,97,108,101,46,0],"i8",ALLOC_NORMAL);F=allocate([115,116,114,99,111,108,108,0],"i8",ALLOC_NORMAL);V=allocate([115,116,114,99,111,108,108,32,97,114,103,117,109,101,110,116,115,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,115,0],"i8",ALLOC_NORMAL);Q=allocate([115,116,114,105,110,103,32,45,62,32,115,116,114,105,110,103,46,32,82,101,116,117,114,110,115,32,97,32,115,116,114,
105,110,103,32,116,104,97,116,32,98,101,104,97,118,101,115,32,102,111,114,32,99,109,112,32,108,111,99,97,108,101,45,97,119,97,114,101,46,0],"i8",ALLOC_NORMAL);Z=allocate([115,58,115,116,114,120,102,114,109,0],"i8",ALLOC_NORMAL);K=allocate([0,0,0,0,131079,0,0,0,0,0,0,0,131080,0,0,0,0,0,0,0,131081,0,0,0,0,0,0,0,131082,0,0,0,0,0,0,0,131083,0,0,0,0,0,0,0,131084,0,0,0,0,0,0,0,131085,0,0,0,0,0,0,0,131072,0,0,0,0,0,0,0,131073,0,0,0,0,0,0,0,131074,0,0,0,0,0,0,0,131075,0,0,0,0,0,0,0,131076,0,0,0,0,0,0,0,131077,
0,0,0,0,0,0,0,131078,0,0,0,0,0,0,0,131098,0,0,0,0,0,0,0,131099,0,0,0,0,0,0,0,131100,0,0,0,0,0,0,0,131101,0,0,0,0,0,0,0,131102,0,0,0,0,0,0,0,131103,0,0,0,0,0,0,0,131104,0,0,0,0,0,0,0,131105,0,0,0,0,0,0,0,131106,0,0,0,0,0,0,0,131107,0,0,0,0,0,0,0,131108,0,0,0,0,0,0,0,131109,0,0,0,0,0,0,0,131086,0,0,0,0,0,0,0,131087,0,0,0,0,0,0,0,131088,0,0,0,0,0,0,0,131089,0,0,0,0,0,0,0,131090,0,0,0,0,0,0,0,131091,0,0,0,0,0,0,0,131092,0,0,0,0,0,0,0,131093,0,0,0,0,0,0,0,131094,0,0,0,0,0,0,0,131095,0,0,0,0,0,0,0,131096,
0,0,0,0,0,0,0,131097,0,0,0,0,0,0,0,65536,0,0,0,0,0,0,0,65537,0,0,0,0,0,0,0,262159,0,0,0,0,0,0,0,131112,0,0,0,0,0,0,0,131113,0,0,0,0,0,0,0,131114,0,0,0,0,0,0,0,131110,0,0,0,0,0,0,0,131111,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,131115,0,0,0,0,0,0,0,131116,0,0,0,0,0,0,0,131118,0,0,0,0,0,0,0,131120,0,0,0,0,0,0,0,131121,0,0,0,0,0,0,0,131119,0,0,0,0,0,0,0,327680,0,0,0,0,0,0,0,327681,0,0,0,0,0,0,0,131180,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,
"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,
0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,
0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);N=allocate([68,65,89,95,49,0],"i8",ALLOC_NORMAL);H=allocate([68,65,89,95,50,0],"i8",ALLOC_NORMAL);ba=allocate([68,65,89,95,51,0],"i8",ALLOC_NORMAL);W=allocate([68,65,89,95,52,0],"i8",ALLOC_NORMAL);B=allocate([68,
65,89,95,53,0],"i8",ALLOC_NORMAL);Y=allocate([68,65,89,95,54,0],"i8",ALLOC_NORMAL);fa=allocate([68,65,89,95,55,0],"i8",ALLOC_NORMAL);ha=allocate([65,66,68,65,89,95,49,0],"i8",ALLOC_NORMAL);la=allocate([65,66,68,65,89,95,50,0],"i8",ALLOC_NORMAL);ra=allocate([65,66,68,65,89,95,51,0],"i8",ALLOC_NORMAL);ya=allocate([65,66,68,65,89,95,52,0],"i8",ALLOC_NORMAL);Da=allocate([65,66,68,65,89,95,53,0],"i8",ALLOC_NORMAL);Ua=allocate([65,66,68,65,89,95,54,0],"i8",ALLOC_NORMAL);Na=allocate([65,66,68,65,89,95,55,
0],"i8",ALLOC_NORMAL);Pa=allocate([77,79,78,95,49,0],"i8",ALLOC_NORMAL);wa=allocate([77,79,78,95,50,0],"i8",ALLOC_NORMAL);Ya=allocate([77,79,78,95,51,0],"i8",ALLOC_NORMAL);Ha=allocate([77,79,78,95,52,0],"i8",ALLOC_NORMAL);ta=allocate([77,79,78,95,53,0],"i8",ALLOC_NORMAL);Va=allocate([77,79,78,95,54,0],"i8",ALLOC_NORMAL);Ia=allocate([77,79,78,95,55,0],"i8",ALLOC_NORMAL);Wa=allocate([77,79,78,95,56,0],"i8",ALLOC_NORMAL);ia=allocate([77,79,78,95,57,0],"i8",ALLOC_NORMAL);Ba=allocate([77,79,78,95,49,48,
0],"i8",ALLOC_NORMAL);Xa=allocate([77,79,78,95,49,49,0],"i8",ALLOC_NORMAL);Ta=allocate([77,79,78,95,49,50,0],"i8",ALLOC_NORMAL);Ea=allocate([65,66,77,79,78,95,49,0],"i8",ALLOC_NORMAL);Ga=allocate([65,66,77,79,78,95,50,0],"i8",ALLOC_NORMAL);ka=allocate([65,66,77,79,78,95,51,0],"i8",ALLOC_NORMAL);Fa=allocate([65,66,77,79,78,95,52,0],"i8",ALLOC_NORMAL);ma=allocate([65,66,77,79,78,95,53,0],"i8",ALLOC_NORMAL);La=allocate([65,66,77,79,78,95,54,0],"i8",ALLOC_NORMAL);Za=allocate([65,66,77,79,78,95,55,0],
"i8",ALLOC_NORMAL);Ka=allocate([65,66,77,79,78,95,56,0],"i8",ALLOC_NORMAL);Ra=allocate([65,66,77,79,78,95,57,0],"i8",ALLOC_NORMAL);$a=allocate([65,66,77,79,78,95,49,48,0],"i8",ALLOC_NORMAL);Ja=allocate([65,66,77,79,78,95,49,49,0],"i8",ALLOC_NORMAL);ja=allocate([65,66,77,79,78,95,49,50,0],"i8",ALLOC_NORMAL);ua=allocate([82,65,68,73,88,67,72,65,82,0],"i8",ALLOC_NORMAL);bb=allocate([84,72,79,85,83,69,80,0],"i8",ALLOC_NORMAL);qa=allocate([67,82,78,67,89,83,84,82,0],"i8",ALLOC_NORMAL);P=allocate([68,95,
84,95,70,77,84,0],"i8",ALLOC_NORMAL);hb=allocate([68,95,70,77,84,0],"i8",ALLOC_NORMAL);Qa=allocate([84,95,70,77,84,0],"i8",ALLOC_NORMAL);mb=allocate([65,77,95,83,84,82,0],"i8",ALLOC_NORMAL);S=allocate([80,77,95,83,84,82,0],"i8",ALLOC_NORMAL);Ca=allocate([67,79,68,69,83,69,84,0],"i8",ALLOC_NORMAL);pa=allocate([84,95,70,77,84,95,65,77,80,77,0],"i8",ALLOC_NORMAL);Aa=allocate([69,82,65,0],"i8",ALLOC_NORMAL);ob=allocate([69,82,65,95,68,95,70,77,84,0],"i8",ALLOC_NORMAL);ib=allocate([69,82,65,95,68,95,84,
95,70,77,84,0],"i8",ALLOC_NORMAL);ca=allocate([69,82,65,95,84,95,70,77,84,0],"i8",ALLOC_NORMAL);na=allocate([65,76,84,95,68,73,71,73,84,83,0],"i8",ALLOC_NORMAL);O=allocate([89,69,83,69,88,80,82,0],"i8",ALLOC_NORMAL);Ma=allocate([78,79,69,88,80,82,0],"i8",ALLOC_NORMAL);$=allocate([95,68,65,84,69,95,70,77,84,0],"i8",ALLOC_NORMAL);ga=allocate([110,108,95,108,97,110,103,105,110,102,111,40,107,101,121,41,32,45,62,32,115,116,114,105,110,103,10,82,101,116,117,114,110,32,116,104,101,32,118,97,108,117,101,
32,102,111,114,32,116,104,101,32,108,111,99,97,108,101,32,105,110,102,111,114,109,97,116,105,111,110,32,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,107,101,121,46,0],"i8",ALLOC_NORMAL);Sa=allocate([105,58,110,108,95,108,97,110,103,105,110,102,111,0],"i8",ALLOC_NORMAL);X=allocate(1,"i8",ALLOC_NORMAL);oa=allocate([117,110,115,117,112,112,111,114,116,101,100,32,108,97,110,103,105,110,102,111,32,99,111,110,115,116,97,110,116,0],"i8",ALLOC_NORMAL);ab=allocate([103,101,116,116,101,120,116,
40,109,115,103,41,32,45,62,32,115,116,114,105,110,103,10,82,101,116,117,114,110,32,116,114,97,110,115,108,97,116,105,111,110,32,111,102,32,109,115,103,46,0],"i8",ALLOC_NORMAL);Oa=allocate([115,0],"i8",ALLOC_NORMAL);va=allocate([100,103,101,116,116,101,120,116,40,100,111,109,97,105,110,44,32,109,115,103,41,32,45,62,32,115,116,114,105,110,103,10,82,101,116,117,114,110,32,116,114,97,110,115,108,97,116,105,111,110,32,111,102,32,109,115,103,32,105,110,32,100,111,109,97,105,110,46,0],"i8",ALLOC_NORMAL);
U=allocate([122,115,0],"i8",ALLOC_NORMAL);fb=allocate([100,99,103,101,116,116,101,120,116,40,100,111,109,97,105,110,44,32,109,115,103,44,32,99,97,116,101,103,111,114,121,41,32,45,62,32,115,116,114,105,110,103,10,82,101,116,117,114,110,32,116,114,97,110,115,108,97,116,105,111,110,32,111,102,32,109,115,103,32,105,110,32,100,111,109,97,105,110,32,97,110,100,32,99,97,116,101,103,111,114,121,46,0],"i8",ALLOC_NORMAL);Cb=allocate([122,115,105,0],"i8",ALLOC_NORMAL);xb=allocate([116,101,120,116,100,111,109,
97,105,110,40,100,111,109,97,105,110,41,32,45,62,32,115,116,114,105,110,103,10,83,101,116,32,116,104,101,32,67,32,108,105,98,114,97,114,121,39,115,32,116,101,120,116,100,109,97,105,110,32,116,111,32,100,111,109,97,105,110,44,32,114,101,116,117,114,110,105,110,103,32,116,104,101,32,110,101,119,32,100,111,109,97,105,110,46,0],"i8",ALLOC_NORMAL);db=allocate([122,0],"i8",ALLOC_NORMAL);gb=allocate([98,105,110,100,116,101,120,116,100,111,109,97,105,110,40,100,111,109,97,105,110,44,32,100,105,114,41,32,
45,62,32,115,116,114,105,110,103,10,66,105,110,100,32,116,104,101,32,67,32,108,105,98,114,97,114,121,39,115,32,100,111,109,97,105,110,32,116,111,32,100,105,114,46,0],"i8",ALLOC_NORMAL);rb=allocate([115,122,0],"i8",ALLOC_NORMAL);sb=allocate([100,111,109,97,105,110,32,109,117,115,116,32,98,101,32,97,32,110,111,110,45,101,109,112,116,121,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Kb=allocate([98,105,110,100,95,116,101,120,116,100,111,109,97,105,110,95,99,111,100,101,115,101,116,40,100,111,109,
97,105,110,44,32,99,111,100,101,115,101,116,41,32,45,62,32,115,116,114,105,110,103,10,66,105,110,100,32,116,104,101,32,67,32,108,105,98,114,97,114,121,39,115,32,100,111,109,97,105,110,32,116,111,32,99,111,100,101,115,101,116,46,0],"i8",ALLOC_NORMAL);Gb=allocate([115,101,116,108,111,99,97,108,101,0],"i8",ALLOC_NORMAL);Nb=allocate([108,111,99,97,108,101,99,111,110,118,0],"i8",ALLOC_NORMAL);Ab=allocate([115,116,114,120,102,114,109,0],"i8",ALLOC_NORMAL);Sb=allocate([110,108,95,108,97,110,103,105,110,
102,111,0],"i8",ALLOC_NORMAL);pb=allocate([103,101,116,116,101,120,116,0],"i8",ALLOC_NORMAL);Mb=allocate([100,103,101,116,116,101,120,116,0],"i8",ALLOC_NORMAL);tb=allocate([100,99,103,101,116,116,101,120,116,0],"i8",ALLOC_NORMAL);Hb=allocate([116,101,120,116,100,111,109,97,105,110,0],"i8",ALLOC_NORMAL);da=allocate([98,105,110,100,116,101,120,116,100,111,109,97,105,110,0],"i8",ALLOC_NORMAL);Jb=allocate([98,105,110,100,95,116,101,120,116,100,111,109,97,105,110,95,99,111,100,101,115,101,116,0],"i8",
ALLOC_NORMAL);jb=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,
0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,
0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);bc=allocate([95,108,111,99,97,108,101,0],"i8",ALLOC_NORMAL);Wb=allocate([76,67,95,67,84,89,80,69,0],"i8",ALLOC_NORMAL);lb=allocate([76,67,95,84,73,77,69,0],"i8",ALLOC_NORMAL);kb=allocate([76,67,95,67,79,76,76,65,84,69,0],"i8",ALLOC_NORMAL);Lb=allocate([76,67,95,77,79,78,69,84,65,82,89,0],"i8",ALLOC_NORMAL);Eb=allocate([76,67,95,77,69,83,83,
65,71,69,83,0],"i8",ALLOC_NORMAL);Yb=allocate([76,67,95,78,85,77,69,82,73,67,0],"i8",ALLOC_NORMAL);yb=allocate([76,67,95,65,76,76,0],"i8",ALLOC_NORMAL);fc=allocate([67,72,65,82,95,77,65,88,0],"i8",ALLOC_NORMAL);zb=allocate([108,111,99,97,108,101,46,69,114,114,111,114,0],"i8",ALLOC_NORMAL);jc=allocate([69,114,114,111,114,0],"i8",ALLOC_NORMAL);mc=allocate([95,95,100,111,99,95,95,0],"i8",ALLOC_NORMAL);HEAP[K]=N;HEAP[K+8]=H;HEAP[K+16]=ba;HEAP[K+24]=W;HEAP[K+32]=B;HEAP[K+40]=Y;HEAP[K+48]=fa;HEAP[K+56]=
ha;HEAP[K+64]=la;HEAP[K+72]=ra;HEAP[K+80]=ya;HEAP[K+88]=Da;HEAP[K+96]=Ua;HEAP[K+104]=Na;HEAP[K+112]=Pa;HEAP[K+120]=wa;HEAP[K+128]=Ya;HEAP[K+136]=Ha;HEAP[K+144]=ta;HEAP[K+152]=Va;HEAP[K+160]=Ia;HEAP[K+168]=Wa;HEAP[K+176]=ia;HEAP[K+184]=Ba;HEAP[K+192]=Xa;HEAP[K+200]=Ta;HEAP[K+208]=Ea;HEAP[K+216]=Ga;HEAP[K+224]=ka;HEAP[K+232]=Fa;HEAP[K+240]=ma;HEAP[K+248]=La;HEAP[K+256]=Za;HEAP[K+264]=Ka;HEAP[K+272]=Ra;HEAP[K+280]=$a;HEAP[K+288]=Ja;HEAP[K+296]=ja;HEAP[K+304]=ua;HEAP[K+312]=bb;HEAP[K+320]=qa;HEAP[K+328]=
P;HEAP[K+336]=hb;HEAP[K+344]=Qa;HEAP[K+352]=mb;HEAP[K+360]=S;HEAP[K+368]=Ca;HEAP[K+376]=pa;HEAP[K+384]=Aa;HEAP[K+392]=ob;HEAP[K+400]=ib;HEAP[K+408]=ca;HEAP[K+416]=na;HEAP[K+424]=O;HEAP[K+432]=Ma;HEAP[K+440]=$;HEAP[jb]=Gb;HEAP[jb+4]=g+2;HEAP[jb+12]=d;HEAP[jb+16]=Nb;HEAP[jb+20]=g+4;HEAP[jb+28]=q;HEAP[jb+32]=F;HEAP[jb+36]=g+6;HEAP[jb+44]=J;HEAP[jb+48]=Ab;HEAP[jb+52]=g+8;HEAP[jb+60]=Q;HEAP[jb+64]=Sb;HEAP[jb+68]=g+10;HEAP[jb+76]=ga;HEAP[jb+80]=pb;HEAP[jb+84]=g+12;HEAP[jb+92]=ab;HEAP[jb+96]=Mb;HEAP[jb+
100]=g+14;HEAP[jb+108]=va;HEAP[jb+112]=tb;HEAP[jb+116]=g+16;HEAP[jb+124]=fb;HEAP[jb+128]=Hb;HEAP[jb+132]=g+18;HEAP[jb+140]=xb;HEAP[jb+144]=da;HEAP[jb+148]=g+20;HEAP[jb+156]=gb;HEAP[jb+160]=Jb;HEAP[jb+164]=g+22;HEAP[jb+172]=Kb}var a={arguments:[]},c,d,f,h,j,k,l,m,n,o,p,q,r,u,s,t,v,w,x,y,z,C,A,G,E,D,R,M,L,I,J,F,V,Q,Z,K,N,H,ba,W,B,Y,fa,ha,la,ra,ya,Da,Ua,Na,Pa,wa,Ya,Ha,ta,Va,Ia,Wa,ia,Ba,Xa,Ta,Ea,Ga,ka,Fa,ma,La,Za,Ka,Ra,$a,Ja,ja,ua,bb,qa,P,hb,Qa,mb,S,Ca,pa,Aa,ob,ib,ca,na,O,Ma,$,ga,Sa,X,oa,ab,Oa,va,U,fb,
Cb,xb,db,gb,rb,sb,Kb,Gb,Nb,Ab,Sb,pb,Mb,tb,Hb,da,Jb,jb,bc,Wb,lb,kb,Lb,Eb,Yb,yb,fc,zb,jc,mc;a._init_locale=function(){var a;for(a=-1;;)switch(a){case -1:var b,d,e,f;b=_Py_InitModule4(bc,jb,0,0,1013);a=b==0?30:1;break;case 1:d=_PyModule_GetDict(b);e=_PyInt_FromLong(0);_PyDict_SetItemString(d,Wb,e);a=e!=0?2:4;break;case 2:HEAP[e]-=1;a=HEAP[e]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=4;break;case 4:e=_PyInt_FromLong(2);_PyDict_SetItemString(d,lb,e);a=e!=0?5:7;break;case 5:HEAP[e]-=1;
a=HEAP[e]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=7;break;case 7:e=_PyInt_FromLong(3);_PyDict_SetItemString(d,kb,e);a=e!=0?8:10;break;case 8:HEAP[e]-=1;a=HEAP[e]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=10;break;case 10:e=_PyInt_FromLong(4);_PyDict_SetItemString(d,Lb,e);a=e!=0?11:13;break;case 11:HEAP[e]-=1;a=HEAP[e]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=13;break;case 13:e=_PyInt_FromLong(5);_PyDict_SetItemString(d,Eb,e);a=e!=0?14:16;
break;case 14:HEAP[e]-=1;a=HEAP[e]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=16;break;case 16:e=_PyInt_FromLong(1);_PyDict_SetItemString(d,Yb,e);a=e!=0?17:19;break;case 17:HEAP[e]-=1;a=HEAP[e]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=19;break;case 19:e=_PyInt_FromLong(6);_PyDict_SetItemString(d,yb,e);a=e!=0?20:22;break;case 20:HEAP[e]-=1;a=HEAP[e]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=22;break;case 22:e=_PyInt_FromLong(127);_PyDict_SetItemString(d,
fc,e);a=e!=0?23:25;break;case 23:HEAP[e]-=1;a=HEAP[e]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=25;break;case 25:a=_PyErr_NewException(zb,0,0);HEAP[n]=a;_PyDict_SetItemString(d,jc,HEAP[n]);e=_PyString_FromString(c);_PyDict_SetItemString(d,mc,e);a=e!=0?26:28;break;case 26:HEAP[e]-=1;a=HEAP[e]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);a=28;break;case 28:f=0;a=HEAP[K+f*8]!=0?29:30;break;case 29:_PyModule_AddIntConstant(b,HEAP[K+f*8],HEAP[K+f*8+4]);f+=1;a=HEAP[K+
f*8]!=0?29:30;break;case 30:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,g=c,q=c+4,r,s;d=b;HEAP[q]=0;d=_PyArg_ParseTuple(d,m,allocate([g,0,0,0,q,0,0,0],["i32*",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=14;break;case 2:d=HEAP[q]!=0?3:10;break;case 3:r=_setlocale(HEAP[g],HEAP[q]);d=r==0?4:5;break;case 4:_PyErr_SetString(HEAP[n],o);e=0;d=14;break;
case 5:s=_PyString_FromString(r);d=s==0?6:7;break;case 6:e=0;d=14;break;case 7:d=HEAP[g]==0|HEAP[g]==6?8:9;break;case 8:a:{d=STACKTOP;STACKTOP+=256;_memset(d,0,256);for(var t=void 0,t=-1;;)switch(t){case -1:var u,B,v,w,x=d,H,O;u=_PyImport_GetModuleDict();t=u==0?38:1;break;case 1:v=_PyDict_GetItemString(u,f);t=v!=0?2:3;break;case 2:v=_PyModule_GetDict(v);t=3;break;case 3:B=t=_PyDict_GetItemString(u,h);t=t!=0?4:5;break;case 4:B=_PyModule_GetDict(B);t=5;break;case 5:t=v==0?6:7;break;case 6:t=B==0?38:
7;break;case 7:O=H=0;t=8;break;case 8:t=___ctype_b_loc();t=(HEAP[HEAP[t]+2*O]&256)!=0?9:10;break;case 9:HEAP[x+H]=O&255;H+=1;t=10;break;case 10:O=t=O+1;t=t<=255?8:11;break;case 11:w=_PyString_FromStringAndSize(x,H);t=w==0?38:12;break;case 12:t=v!=0?13:14;break;case 13:_PyDict_SetItemString(v,j,w);t=14;break;case 14:t=B!=0?15:16;break;case 15:_PyDict_SetItemString(B,j,w);t=16;break;case 16:HEAP[w]-=1;t=HEAP[w]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);t=18;break;case 18:O=H=0;t=
19;break;case 19:t=___ctype_b_loc();t=(HEAP[HEAP[t]+2*O]&512)!=0?20:21;break;case 20:HEAP[x+H]=O&255;H+=1;t=21;break;case 21:O=t=O+1;t=t<=255?19:22;break;case 22:w=_PyString_FromStringAndSize(x,H);t=w==0?38:23;break;case 23:t=v!=0?24:25;break;case 24:_PyDict_SetItemString(v,k,w);t=25;break;case 25:t=B!=0?26:27;break;case 26:_PyDict_SetItemString(B,k,w);t=27;break;case 27:HEAP[w]-=1;t=HEAP[w]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);t=29;break;case 29:O=H=0;t=30;break;case 30:t=
___ctype_b_loc();t=(HEAP[HEAP[t]+2*O]&1024)!=0?31:32;break;case 31:HEAP[x+H]=O&255;H+=1;t=32;break;case 32:O=t=O+1;t=t<=255?30:33;break;case 33:w=_PyString_FromStringAndSize(x,H);t=w==0?38:34;break;case 34:t=v!=0?35:36;break;case 35:_PyDict_SetItemString(v,l,w);t=36;break;case 36:HEAP[w]-=1;t=HEAP[w]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);t=38;break;case 38:STACKTOP=d;break a;default:assert(0,"bad label: "+t)}}d=9;break;case 9:_PyErr_Clear();d=13;break;case 10:r=_setlocale(HEAP[g],
0);d=r==0?11:12;break;case 11:_PyErr_SetString(HEAP[n],p);e=0;d=14;break;case 12:s=_PyString_FromString(r);d=13;break;case 13:e=s;d=14;break;case 14:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d,f;c=_PyDict_New();a=c==0?1:2;break;case 1:b=0;a=82;break;case 2:d=_localeconv();f=_PyString_FromString(HEAP[d]);a=f==0?75:3;break;case 3:_PyDict_SetItemString(c,r,f);a=f!=0?4:6;break;case 4:HEAP[f]-=1;a=HEAP[f]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[f+
4]+24]](f);a=6;break;case 6:f=a=_PyString_FromString(HEAP[d+4]);a=a==0?75:7;break;case 7:_PyDict_SetItemString(c,u,f);a=f!=0?8:10;break;case 8:HEAP[f]-=1;a=HEAP[f]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=10;break;case 10:f=a=e(HEAP[d+8]);a=a==0?75:11;break;case 11:_PyDict_SetItemString(c,s,f);a=f!=0?12:14;break;case 12:HEAP[f]-=1;a=HEAP[f]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=14;break;case 14:f=a=_PyString_FromString(HEAP[d+12]);a=a==0?75:15;break;case 15:_PyDict_SetItemString(c,
t,f);a=f!=0?16:18;break;case 16:HEAP[f]-=1;a=HEAP[f]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=18;break;case 18:f=a=_PyString_FromString(HEAP[d+16]);a=a==0?75:19;break;case 19:_PyDict_SetItemString(c,v,f);a=f!=0?20:22;break;case 20:HEAP[f]-=1;a=HEAP[f]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=22;break;case 22:f=a=_PyString_FromString(HEAP[d+20]);a=a==0?75:23;break;case 23:_PyDict_SetItemString(c,w,f);a=f!=0?24:26;break;case 24:HEAP[f]-=1;a=HEAP[f]==0?25:
26;break;case 25:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=26;break;case 26:f=a=_PyString_FromString(HEAP[d+24]);a=a==0?75:27;break;case 27:_PyDict_SetItemString(c,x,f);a=f!=0?28:30;break;case 28:HEAP[f]-=1;a=HEAP[f]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=30;break;case 30:f=a=e(HEAP[d+28]);a=a==0?75:31;break;case 31:_PyDict_SetItemString(c,y,f);a=f!=0?32:34;break;case 32:HEAP[f]-=1;a=HEAP[f]==0?33:34;break;case 33:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=34;break;case 34:f=a=
_PyString_FromString(HEAP[d+32]);a=a==0?75:35;break;case 35:_PyDict_SetItemString(c,z,f);a=f!=0?36:38;break;case 36:HEAP[f]-=1;a=HEAP[f]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=38;break;case 38:f=a=_PyString_FromString(HEAP[d+36]);a=a==0?75:39;break;case 39:_PyDict_SetItemString(c,C,f);a=f!=0?40:42;break;case 40:HEAP[f]-=1;a=HEAP[f]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=42;break;case 42:f=a=_PyInt_FromLong(HEAP[d+40]);a=a==0?75:43;break;case 43:_PyDict_SetItemString(c,
A,f);a=f!=0?44:46;break;case 44:HEAP[f]-=1;a=HEAP[f]==0?45:46;break;case 45:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=46;break;case 46:f=a=_PyInt_FromLong(HEAP[d+41]);a=a==0?75:47;break;case 47:_PyDict_SetItemString(c,G,f);a=f!=0?48:50;break;case 48:HEAP[f]-=1;a=HEAP[f]==0?49:50;break;case 49:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=50;break;case 50:f=a=_PyInt_FromLong(HEAP[d+42]);a=a==0?75:51;break;case 51:_PyDict_SetItemString(c,E,f);a=f!=0?52:54;break;case 52:HEAP[f]-=1;a=HEAP[f]==0?53:54;break;case 53:FUNCTION_TABLE[HEAP[HEAP[f+
4]+24]](f);a=54;break;case 54:f=a=_PyInt_FromLong(HEAP[d+43]);a=a==0?75:55;break;case 55:_PyDict_SetItemString(c,D,f);a=f!=0?56:58;break;case 56:HEAP[f]-=1;a=HEAP[f]==0?57:58;break;case 57:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=58;break;case 58:f=a=_PyInt_FromLong(HEAP[d+44]);a=a==0?75:59;break;case 59:_PyDict_SetItemString(c,R,f);a=f!=0?60:62;break;case 60:HEAP[f]-=1;a=HEAP[f]==0?61:62;break;case 61:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=62;break;case 62:f=a=_PyInt_FromLong(HEAP[d+45]);a=a==0?
75:63;break;case 63:_PyDict_SetItemString(c,M,f);a=f!=0?64:66;break;case 64:HEAP[f]-=1;a=HEAP[f]==0?65:66;break;case 65:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=66;break;case 66:f=a=_PyInt_FromLong(HEAP[d+46]);a=a==0?75:67;break;case 67:_PyDict_SetItemString(c,L,f);a=f!=0?68:70;break;case 68:HEAP[f]-=1;a=HEAP[f]==0?69:70;break;case 69:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=70;break;case 70:f=a=_PyInt_FromLong(HEAP[d+47]);a=a==0?75:71;break;case 71:_PyDict_SetItemString(c,I,f);a=f!=0?72:74;break;case 72:HEAP[f]-=
1;a=HEAP[f]==0?73:74;break;case 73:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=74;break;case 74:b=c;a=82;break;case 75:a=c!=0?76:78;break;case 76:HEAP[c]-=1;a=HEAP[c]==0?77:78;break;case 77:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=78;break;case 78:a=f!=0?79:81;break;case 79:HEAP[f]-=1;a=HEAP[f]==0?80:81;break;case 80:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=81;break;case 81:b=0;a=82;break;case 82:return b;default:assert(0,"bad label: "+a)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;
for(d=-1;;)switch(d){case -1:var e,f,g,h=c,j=c+4,k,l,m,n,o,p,q;d=b;o=n=m=l=k=0;d=_PyArg_UnpackTuple(d,F,2,2,allocate([h,0,0,0,j,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;d=47;break;case 2:d=(HEAP[HEAP[HEAP[h]+4]+84]&134217728)!=0?3:5;break;case 3:d=(HEAP[HEAP[HEAP[j]+4]+84]&134217728)!=0?4:5;break;case 4:g=_strcoll(HEAP[h]+20,HEAP[j]+20);g=_PyInt_FromLong(g);d=47;break;case 5:d=(HEAP[HEAP[HEAP[h]+4]+84]&268435456)==0?6:8;break;case 6:d=(HEAP[HEAP[HEAP[j]+
4]+84]&268435456)==0?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_ValueError],V);d=8;break;case 8:d=(HEAP[HEAP[HEAP[h]+4]+84]&268435456)==0?9:12;break;case 9:d=_PyUnicodeUCS2_FromObject(HEAP[h]);HEAP[h]=d;d=HEAP[h]==0?10:11;break;case 10:g=0;d=47;break;case 11:n=1;d=12;break;case 12:d=(HEAP[HEAP[HEAP[j]+4]+84]&268435456)==0?13:19;break;case 13:d=_PyUnicodeUCS2_FromObject(HEAP[j]);HEAP[j]=d;d=HEAP[j]==0?14:18;break;case 14:d=n!=0?15:17;break;case 15:d=HEAP[h];HEAP[d]-=1;d=HEAP[d]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[HEAP[h]+
4]+24]](HEAP[h]);d=17;break;case 17:g=0;d=47;break;case 18:o=1;d=19;break;case 19:p=HEAP[HEAP[h]+8]+1;d=p*4>=0?20:23;break;case 20:d=p*4!=0?21:22;break;case 21:f=p*4;d=24;break;case 22:f=1;d=24;break;case 23:l=0;d=25;break;case 24:l=d=_malloc(f);d=d==0?25:26;break;case 25:_PyErr_NoMemory();d=36;break;case 26:d=_PyUnicodeUCS2_AsWideChar(HEAP[h],l,p)==-1?36:27;break;case 27:HEAP[l+4*(p-1)]=0;q=HEAP[HEAP[j]+8]+1;d=q*4>=0?28:31;break;case 28:d=q*4!=0?29:30;break;case 29:e=q*4;d=32;break;case 30:e=1;d=
32;break;case 31:m=0;d=33;break;case 32:m=d=_malloc(e);d=d==0?33:34;break;case 33:_PyErr_NoMemory();d=36;break;case 34:d=_PyUnicodeUCS2_AsWideChar(HEAP[j],m,q)==-1?36:35;break;case 35:HEAP[m+4*(q-1)]=0;k=_wcscoll(l,m);k=_PyInt_FromLong(k);d=36;break;case 36:d=l!=0?37:38;break;case 37:_free(l);d=38;break;case 38:d=m!=0?39:40;break;case 39:_free(m);d=40;break;case 40:d=n!=0?41:43;break;case 41:d=HEAP[h];HEAP[d]-=1;d=HEAP[d]==0?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[HEAP[h]+4]+24]](HEAP[h]);d=
43;break;case 43:d=o!=0?44:46;break;case 44:d=HEAP[j];HEAP[d]-=1;d=HEAP[d]==0?45:46;break;case 45:FUNCTION_TABLE[HEAP[HEAP[HEAP[j]+4]+24]](HEAP[j]);d=46;break;case 46:g=k;d=47;break;case 47:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g,h,j;d=_PyArg_ParseTuple(b,Z,allocate([e,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=9;break;case 2:h=_strlen(HEAP[e])+1;g=
_PyMem_Malloc(h);d=g==0?3:4;break;case 3:f=_PyErr_NoMemory();d=9;break;case 4:j=_strxfrm(g,HEAP[e],h)+1;d=j>h?5:8;break;case 5:g=_PyMem_Realloc(g,j);d=g==0?6:7;break;case 6:f=_PyErr_NoMemory();d=9;break;case 7:_strxfrm(g,HEAP[e],j);d=8;break;case 8:d=_PyString_FromString(g);_PyMem_Free(g);f=d;d=9;break;case 9:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h,j;d=_PyArg_ParseTuple(b,
Sa,allocate([g,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=11;break;case 2:h=0;d=9;break;case 3:d=HEAP[K+h*8+4]==HEAP[g]?4:8;break;case 4:j=_nl_langinfo(HEAP[g]);d=j!=0?5:6;break;case 5:e=j;d=7;break;case 6:e=X;d=7;break;case 7:f=_PyString_FromString(e);d=11;break;case 8:h+=1;d=9;break;case 9:d=HEAP[K+h*8]!=0?3:10;break;case 10:_PyErr_SetString(HEAP[_PyExc_ValueError],oa);f=0;d=11;break;case 11:return d=f,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;
STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;d=_PyArg_ParseTuple(b,Oa,allocate([e,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:d=_gettext(HEAP[e]);f=_PyString_FromString(d);d=3;break;case 3:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g=c+4;d=_PyArg_ParseTuple(b,U,allocate([e,0,0,0,g,0,0,0],["i8**",0,0,0,"i8**",0,0,
0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:d=_dgettext(HEAP[e],HEAP[g]);f=_PyString_FromString(d);d=3;break;case 3:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g=c+4,h=c+8;d=_PyArg_ParseTuple(b,Cb,allocate([e,0,0,0,g,0,0,0,h,0,0,0],["i8**",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:d=_dcgettext(HEAP[e],HEAP[g],HEAP[h]);
f=_PyString_FromString(d);d=3;break;case 3:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,db,allocate([f,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:d=_textdomain(HEAP[f]);HEAP[f]=d;d=HEAP[f]==0?3:4;break;case 3:_PyErr_SetFromErrno(HEAP[_PyExc_OSError]);e=0;d=5;break;case 4:e=_PyString_FromString(HEAP[f]);d=5;break;case 5:return STACKTOP=
c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4;d=_PyArg_ParseTuple(b,rb,allocate([f,0,0,0,g,0,0,0],["i8**",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=7;break;case 2:d=HEAP[HEAP[f]]==0?3:4;break;case 3:_PyErr_SetString(HEAP[n],sb);e=0;d=7;break;case 4:d=_bindtextdomain(HEAP[f],HEAP[g]);HEAP[g]=d;d=HEAP[g]==0?5:6;break;case 5:_PyErr_SetFromErrno(HEAP[_PyExc_OSError]);e=0;d=7;break;
case 6:e=_PyString_FromString(HEAP[g]);d=7;break;case 7:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4;d=_PyArg_ParseTuple(b,rb,allocate([f,0,0,0,g,0,0,0],["i8**",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:d=_bind_textdomain_codeset(HEAP[f],HEAP[g]);HEAP[g]=d;d=HEAP[g]!=0?3:4;break;case 3:e=_PyString_FromString(HEAP[g]);d=5;break;case 4:HEAP[__Py_NoneStruct]+=
1;e=__Py_NoneStruct;d=5;break;case 5:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0]);a.run=b;b();return a});