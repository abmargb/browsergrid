(function(g){function e(a){var b;for(b=-1;;)switch(b){case -1:var c,e;c=a;b=HEAP[c+12]!=0?1:4;break;case 1:b=HEAP[c+16]-HEAP[c+20]>0?2:4;break;case 2:b=HEAP[HEAP[c+12]]!=0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],m);e=-1;b=5;break;case 4:e=0;b=5;break;case 5:return a=e;default:assert(0,"bad label: "+b)}}function b(a){var b;for(b=-1;;)switch(b){case -1:b=a;b=b==-9?1:b==-7?6:b==-6?5:b==-5?4:b==-4?4:b==-3?3:b==-2?2:b==-1?7:8;break;
case 1:_PyErr_SetString(HEAP[_PyExc_SystemError],n);b=8;break;case 2:_PyErr_SetString(HEAP[_PyExc_ValueError],o);b=8;break;case 3:_PyErr_NoMemory();b=8;break;case 4:_PyErr_SetString(HEAP[_PyExc_IOError],p);b=8;break;case 5:_PyErr_SetString(HEAP[_PyExc_IOError],q);b=8;break;case 6:_PyErr_SetString(HEAP[_PyExc_EOFError],r);b=8;break;case 7:_PyErr_SetString(HEAP[_PyExc_RuntimeError],u);b=8;break;case 8:return;default:assert(0,"bad label: "+b)}}function a(a){var b;for(b=-1;;)switch(b){case -1:var c,e,
d=c=a;b=c>8192?1:4;break;case 1:var f=c;b=d<=524288?2:3;break;case 2:e=c+f;b=5;break;case 3:e=f+524288;b=5;break;case 4:e=d+8192;b=5;break;case 5:return a=e;default:assert(0,"bad label: "+b)}}function c(a,c){var e=STACKTOP;STACKTOP+=9;_memset(e,0,9);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,k=e,l,m,n,o,p=e+1,q=e+5,B,r,H;f=a;g=c;B=HEAP[f+32];r=HEAP[f+36];H=HEAP[f+28];d=g>0?1:2;break;case 1:j=g;d=3;break;case 2:j=100;d=3;break;case 3:n=j;d=_PyString_FromStringAndSize(0,n);HEAP[p]=d;d=d==0?4:5;
break;case 4:h=0;d=42;break;case 5:l=HEAP[p]+20;m=l+n;d=19;break;case 6:d=_BZ2_bzRead(q,HEAP[f+40],k,1);HEAP[f+48]+=1;d=d==0?20:7;break;case 7:d=H!=0?8:17;break;case 8:d=r!=0?9:13;break;case 9:r=0;var u=B;d=HEAP[k]==10?10:12;break;case 10:B=u|4;d=HEAP[q]!=0?20:11;break;case 11:d=_BZ2_bzRead(q,HEAP[f+40],k,1);HEAP[f+48]+=1;d=d==0?20:13;break;case 12:B=u|1;d=13;break;case 13:d=HEAP[k]==13?14:15;break;case 14:r=1;HEAP[k]=10;d=17;break;case 15:d=HEAP[k]==10?16:17;break;case 16:B|=2;d=17;break;case 17:HEAP[l]=
HEAP[k];l+=1;d=HEAP[q]!=0?20:18;break;case 18:d=HEAP[k]==10?20:19;break;case 19:d=l!=m?6:20;break;case 20:d=H!=0?21:24;break;case 21:d=HEAP[q]==4?22:24;break;case 22:d=r!=0?23:24;break;case 23:B|=1;d=24;break;case 24:HEAP[f+32]=B;HEAP[f+36]=r;d=HEAP[q]==4?25:26;break;case 25:HEAP[f+56]=HEAP[f+48];HEAP[f+44]=2;d=39;break;case 26:d=HEAP[q]!=0?27:30;break;case 27:b(HEAP[q]);d=HEAP[p];HEAP[d]-=1;d=HEAP[d]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+24]](HEAP[p]);d=29;break;case 29:h=0;
d=42;break;case 30:d=HEAP[k]==10?39:31;break;case 31:d=g>0?39:32;break;case 32:o=n;d=n>>>2;n=d+n;d=n<0?33:36;break;case 33:_PyErr_SetString(HEAP[_PyExc_OverflowError],s);d=HEAP[p];HEAP[d]-=1;d=HEAP[d]==0?34:35;break;case 34:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+24]](HEAP[p]);d=35;break;case 35:h=0;d=42;break;case 36:d=__PyString_Resize(p,n)<0?37:38;break;case 37:h=0;d=42;break;case 38:l=HEAP[p]+20+o;m=HEAP[p]+20+n;d=19;break;case 39:o=l-(HEAP[p]+20);d=o!=n?40:41;break;case 40:__PyString_Resize(p,o);
d=41;break;case 41:h=HEAP[p];d=42;break;case 42:return f=h,STACKTOP=e,f;default:assert(0,"bad label: "+d)}}function d(a,b,c,e,d){var f,g=null;for(f=-1;;)switch(f){case -1:var h,j,k,l,m,n,o,p,q,B,r,s,H;h=a;j=b;k=c;l=e;m=d;o=k;f=k==0?1:2;break;case 1:throw ___assert_fail(t,v,352,w),"Reached an unreachable!";case 2:f=j==0?3:4;break;case 3:throw ___assert_fail(x,v,353,w),"Reached an unreachable!";case 4:f=HEAP[m+28]==0?5:6;break;case 5:n=_BZ2_bzRead(h,j,k,l);f=28;break;case 6:p=HEAP[m+32];q=HEAP[m+36];
f=26;break;case 7:s=o;B=_BZ2_bzRead(h,j,o,l);f=B>l?8:9;break;case 8:throw ___assert_fail(y,v,370,w),"Reached an unreachable!";case 9:l-=B;var u=l!=0;r=u;B=g=B-1;g!=-1?(g=9,f=10):(g=9,f=22);break;case 10:H=f=HEAP[s];s+=1;f=f==13?11:13;break;case 11:HEAP[o]=10;o+=1;q=1;f=12;break;case 12:B=f=B-1;f=f!=-1?10:21;break;case 13:var fa=H;f=q==0?16:14;break;case 14:f=fa!=10?18:15;break;case 15:q=0;p|=4;l+=1;f=12;break;case 16:f=fa==10?17:18;break;case 17:p|=2;f=20;break;case 18:f=q!=0?19:20;break;case 19:p|=
1;f=20;break;case 20:HEAP[o]=H;o+=1;q=0;f=12;break;case 21:var P=r,g=21;f=22;break;case 22:f=(g==21?P:u)!=0?23:26;break;case 23:f=q!=0?24:27;break;case 24:f=HEAP[h]==4?25:27;break;case 25:p|=1;f=27;break;case 26:f=l!=0?7:27;break;case 27:HEAP[m+32]=p;HEAP[m+36]=q;n=o-k;f=28;break;case 28:return a=n;default:assert(0,"bad label: "+f)}}function f(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+12]!=0?1:2;break;case 1:_PyMem_Free(HEAP[c+12]);HEAP[c+12]=0;b=2;break;case 2:return;default:assert(0,
"bad label: "+b)}}function h(a,c,e){var g;for(g=-1;;)switch(g){case -1:var j,k,l,m,n,o,p,q;j=a;k=c;l=e;g=HEAP[j+12]==0?1:3;break;case 1:a:{var B=j,r=l;g=STACKTOP;STACKTOP+=4;_memset(g,0,4);for(var s=void 0,s=-1;;)switch(s){case -1:var H,u,t,fa,P=g;H=B;u=r;s=HEAP[H+12]!=0?1:4;break;case 1:s=HEAP[H+16]-HEAP[H+20]>0?2:3;break;case 2:t=0;s=13;break;case 3:f(H);s=4;break;case 4:s=HEAP[H+44]==2?5:6;break;case 5:HEAP[H+20]=HEAP[H+12];HEAP[H+16]=HEAP[H+12];t=0;s=13;break;case 6:s=_PyMem_Malloc(u);HEAP[H+
12]=s;s=HEAP[H+12]==0?7:8;break;case 7:_PyErr_NoMemory();t=-1;s=13;break;case 8:fa=d(P,HEAP[H+40],HEAP[H+12],u,H);HEAP[H+48]=fa+HEAP[H+48];s=HEAP[P]==4?9:10;break;case 9:HEAP[H+56]=HEAP[H+48];HEAP[H+44]=2;s=12;break;case 10:s=HEAP[P]!=0?11:12;break;case 11:b(HEAP[P]);f(H);t=-1;s=13;break;case 12:HEAP[H+20]=HEAP[H+12];HEAP[H+16]=HEAP[H+12]+fa;t=0;s=13;break;case 13:B=t;STACKTOP=g;g=B;break a;default:assert(0,"bad label: "+s)}g=void 0}g=g<0?2:3;break;case 2:m=0;g=14;break;case 3:q=HEAP[j+16]-HEAP[j+
20];g=HEAP[j+16]-HEAP[j+20]==0?4:5;break;case 4:m=_PyString_FromStringAndSize(0,k);g=14;break;case 5:o=_memchr(HEAP[j+20],10,q);g=o!=0?6:10;break;case 6:o+=1;q=o-HEAP[j+20];n=_PyString_FromStringAndSize(0,q+k);g=n==0?7:8;break;case 7:m=0;g=14;break;case 8:_llvm_memcpy_p0i8_p0i8_i32(n+20+k,HEAP[j+20],q,1,0);HEAP[j+20]=o;g=HEAP[j+16]==o?9:13;break;case 9:f(j);g=13;break;case 10:o=HEAP[j+20];p=HEAP[j+12];HEAP[j+12]=0;n=h(j,q+k,(l>>2)+l);g=n==0?11:12;break;case 11:_PyMem_Free(p);m=0;g=14;break;case 12:_llvm_memcpy_p0i8_p0i8_i32(n+
20+k,o,q,1,0);_PyMem_Free(p);g=13;break;case 13:m=n;g=14;break;case 14:return a=m;default:assert(0,"bad label: "+g)}}function j(){l=allocate([84,104,101,32,98,122,50,32,112,121,116,104,111,110,32,109,111,100,117,108,101,32,119,97,115,32,119,114,105,116,116,101,110,32,98,121,58,10,10,32,32,32,32,71,117,115,116,97,118,111,32,78,105,101,109,101,121,101,114,32,60,110,105,101,109,101,121,101,114,64,99,111,110,101,99,116,105,118,97,46,99,111,109,62,10,0],"i8",ALLOC_NORMAL);m=allocate([77,105,120,105,110,
103,32,105,116,101,114,97,116,105,111,110,32,97,110,100,32,114,101,97,100,32,109,101,116,104,111,100,115,32,119,111,117,108,100,32,108,111,115,101,32,100,97,116,97,0],"i8",ALLOC_NORMAL);n=allocate([116,104,101,32,98,122,50,32,108,105,98,114,97,114,121,32,119,97,115,32,110,111,116,32,99,111,109,112,105,108,101,100,32,99,111,114,114,101,99,116,108,121,0],"i8",ALLOC_NORMAL);o=allocate([116,104,101,32,98,122,50,32,108,105,98,114,97,114,121,32,104,97,115,32,114,101,99,101,105,118,101,100,32,119,114,111,
110,103,32,112,97,114,97,109,101,116,101,114,115,0],"i8",ALLOC_NORMAL);p=allocate([105,110,118,97,108,105,100,32,100,97,116,97,32,115,116,114,101,97,109,0],"i8",ALLOC_NORMAL);q=allocate([117,110,107,110,111,119,110,32,73,79,32,101,114,114,111,114,0],"i8",ALLOC_NORMAL);r=allocate([99,111,109,112,114,101,115,115,101,100,32,102,105,108,101,32,101,110,100,101,100,32,98,101,102,111,114,101,32,116,104,101,32,108,111,103,105,99,97,108,32,101,110,100,45,111,102,45,115,116,114,101,97,109,32,119,97,115,32,
100,101,116,101,99,116,101,100,0],"i8",ALLOC_NORMAL);u=allocate([119,114,111,110,103,32,115,101,113,117,101,110,99,101,32,111,102,32,98,122,50,32,108,105,98,114,97,114,121,32,99,111,109,109,97,110,100,115,32,117,115,101,100,0],"i8",ALLOC_NORMAL);s=allocate([108,105,110,101,32,105,115,32,108,111,110,103,101,114,32,116,104,97,110,32,97,32,80,121,116,104,111,110,32,115,116,114,105,110,103,32,99,97,110,32,104,111,108,100,0],"i8",ALLOC_NORMAL);t=allocate([98,117,102,32,33,61,32,40,40,118,111,105,100,32,
42,41,48,41,0],"i8",ALLOC_NORMAL);v=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,98,122,50,109,111,100,117,108,101,46,99,0],"i8",ALLOC_NORMAL);w=allocate([85,116,105,108,95,85,110,105,118,78,101,119,108,105,110,101,82,101,97,100,0],"i8",ALLOC_NORMAL);x=allocate([115,116,114,101,97,109,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);y=allocate([110,114,101,97,100,32,60,61,32,110,0],"i8",ALLOC_NORMAL);z=allocate([114,101,97,100,40,91,115,105,
122,101,93,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,97,100,32,97,116,32,109,111,115,116,32,115,105,122,101,32,117,110,99,111,109,112,114,101,115,115,101,100,32,98,121,116,101,115,44,32,114,101,116,117,114,110,101,100,32,97,115,32,97,32,115,116,114,105,110,103,46,32,73,102,32,116,104,101,32,115,105,122,101,10,97,114,103,117,109,101,110,116,32,105,115,32,110,101,103,97,116,105,118,101,32,111,114,32,111,109,105,116,116,101,100,44,32,114,101,97,100,32,117,110,116,105,108,32,69,79,70,32,105,
115,32,114,101,97,99,104,101,100,46,10,0],"i8",ALLOC_NORMAL);C=allocate([124,108,58,114,101,97,100,0],"i8",ALLOC_NORMAL);A=allocate(1,"i8",ALLOC_NORMAL);G=allocate([73,47,79,32,111,112,101,114,97,116,105,111,110,32,111,110,32,99,108,111,115,101,100,32,102,105,108,101,0],"i8",ALLOC_NORMAL);E=allocate([102,105,108,101,32,105,115,32,110,111,116,32,114,101,97,100,121,32,102,111,114,32,114,101,97,100,105,110,103,0],"i8",ALLOC_NORMAL);D=allocate([114,101,113,117,101,115,116,101,100,32,110,117,109,98,101,
114,32,111,102,32,98,121,116,101,115,32,105,115,32,109,111,114,101,32,116,104,97,110,32,97,32,80,121,116,104,111,110,32,115,116,114,105,110,103,32,99,97,110,32,104,111,108,100,0],"i8",ALLOC_NORMAL);R=allocate([114,101,97,100,108,105,110,101,40,91,115,105,122,101,93,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,116,104,101,32,110,101,120,116,32,108,105,110,101,32,102,114,111,109,32,116,104,101,32,102,105,108,101,44,32,97,115,32,97,32,115,116,114,105,110,103,44,32,114,101,116,
97,105,110,105,110,103,32,110,101,119,108,105,110,101,46,10,65,32,110,111,110,45,110,101,103,97,116,105,118,101,32,115,105,122,101,32,97,114,103,117,109,101,110,116,32,119,105,108,108,32,108,105,109,105,116,32,116,104,101,32,109,97,120,105,109,117,109,32,110,117,109,98,101,114,32,111,102,32,98,121,116,101,115,32,116,111,10,114,101,116,117,114,110,32,40,97,110,32,105,110,99,111,109,112,108,101,116,101,32,108,105,110,101,32,109,97,121,32,98,101,32,114,101,116,117,114,110,101,100,32,116,104,101,110,
41,46,32,82,101,116,117,114,110,32,97,110,32,101,109,112,116,121,10,115,116,114,105,110,103,32,97,116,32,69,79,70,46,10,0],"i8",ALLOC_NORMAL);M=allocate([124,105,58,114,101,97,100,108,105,110,101,0],"i8",ALLOC_NORMAL);L=allocate([114,101,97,100,108,105,110,101,115,40,91,115,105,122,101,93,41,32,45,62,32,108,105,115,116,10,10,67,97,108,108,32,114,101,97,100,108,105,110,101,40,41,32,114,101,112,101,97,116,101,100,108,121,32,97,110,100,32,114,101,116,117,114,110,32,97,32,108,105,115,116,32,111,102,32,
108,105,110,101,115,32,114,101,97,100,46,10,84,104,101,32,111,112,116,105,111,110,97,108,32,115,105,122,101,32,97,114,103,117,109,101,110,116,44,32,105,102,32,103,105,118,101,110,44,32,105,115,32,97,110,32,97,112,112,114,111,120,105,109,97,116,101,32,98,111,117,110,100,32,111,110,32,116,104,101,10,116,111,116,97,108,32,110,117,109,98,101,114,32,111,102,32,98,121,116,101,115,32,105,110,32,116,104,101,32,108,105,110,101,115,32,114,101,116,117,114,110,101,100,46,10,0],"i8",ALLOC_NORMAL);I=allocate([124,
108,58,114,101,97,100,108,105,110,101,115,0],"i8",ALLOC_NORMAL);J=allocate([120,114,101,97,100,108,105,110,101,115,40,41,32,45,62,32,115,101,108,102,10,10,70,111,114,32,98,97,99,107,119,97,114,100,32,99,111,109,112,97,116,105,98,105,108,105,116,121,46,32,66,90,50,70,105,108,101,32,111,98,106,101,99,116,115,32,110,111,119,32,105,110,99,108,117,100,101,32,116,104,101,32,112,101,114,102,111,114,109,97,110,99,101,10,111,112,116,105,109,105,122,97,116,105,111,110,115,32,112,114,101,118,105,111,117,115,
108,121,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,101,32,120,114,101,97,100,108,105,110,101,115,32,109,111,100,117,108,101,46,10,0],"i8",ALLOC_NORMAL);F=allocate([119,114,105,116,101,40,100,97,116,97,41,32,45,62,32,78,111,110,101,10,10,87,114,105,116,101,32,116,104,101,32,39,100,97,116,97,39,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101,46,32,78,111,116,101,32,116,104,97,116,32,100,117,101,32,116,111,32,98,117,102,102,101,114,105,110,103,44,32,99,108,111,115,
101,40,41,32,109,97,121,10,98,101,32,110,101,101,100,101,100,32,98,101,102,111,114,101,32,116,104,101,32,102,105,108,101,32,111,110,32,100,105,115,107,32,114,101,102,108,101,99,116,115,32,116,104,101,32,100,97,116,97,32,119,114,105,116,116,101,110,46,10,0],"i8",ALLOC_NORMAL);V=allocate([115,42,58,119,114,105,116,101,0],"i8",ALLOC_NORMAL);Q=allocate([102,105,108,101,32,105,115,32,110,111,116,32,114,101,97,100,121,32,102,111,114,32,119,114,105,116,105,110,103,0],"i8",ALLOC_NORMAL);Z=allocate([119,114,
105,116,101,108,105,110,101,115,40,115,101,113,117,101,110,99,101,95,111,102,95,115,116,114,105,110,103,115,41,32,45,62,32,78,111,110,101,10,10,87,114,105,116,101,32,116,104,101,32,115,101,113,117,101,110,99,101,32,111,102,32,115,116,114,105,110,103,115,32,116,111,32,116,104,101,32,102,105,108,101,46,32,78,111,116,101,32,116,104,97,116,32,110,101,119,108,105,110,101,115,32,97,114,101,32,110,111,116,10,97,100,100,101,100,46,32,84,104,101,32,115,101,113,117,101,110,99,101,32,99,97,110,32,98,101,32,
97,110,121,32,105,116,101,114,97,98,108,101,32,111,98,106,101,99,116,32,112,114,111,100,117,99,105,110,103,32,115,116,114,105,110,103,115,46,32,84,104,105,115,32,105,115,10,101,113,117,105,118,97,108,101,110,116,32,116,111,32,99,97,108,108,105,110,103,32,119,114,105,116,101,40,41,32,102,111,114,32,101,97,99,104,32,115,116,114,105,110,103,46,10,0],"i8",ALLOC_NORMAL);K=allocate([119,114,105,116,101,108,105,110,101,115,40,41,32,114,101,113,117,105,114,101,115,32,97,110,32,105,116,101,114,97,98,108,101,
32,97,114,103,117,109,101,110,116,0],"i8",ALLOC_NORMAL);N=allocate([119,114,105,116,101,108,105,110,101,115,40,41,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,97,32,115,101,113,117,101,110,99,101,32,111,102,32,115,116,114,105,110,103,115,0],"i8",ALLOC_NORMAL);H=allocate([115,101,101,107,40,111,102,102,115,101,116,32,91,44,32,119,104,101,110,99,101,93,41,32,45,62,32,78,111,110,101,10,10,77,111,118,101,32,116,111,32,110,101,119,32,102,105,108,101,32,112,111,115,105,116,105,111,
110,46,32,65,114,103,117,109,101,110,116,32,111,102,102,115,101,116,32,105,115,32,97,32,98,121,116,101,32,99,111,117,110,116,46,32,79,112,116,105,111,110,97,108,10,97,114,103,117,109,101,110,116,32,119,104,101,110,99,101,32,100,101,102,97,117,108,116,115,32,116,111,32,48,32,40,111,102,102,115,101,116,32,102,114,111,109,32,115,116,97,114,116,32,111,102,32,102,105,108,101,44,32,111,102,102,115,101,116,10,115,104,111,117,108,100,32,98,101,32,62,61,32,48,41,59,32,111,116,104,101,114,32,118,97,108,117,
101,115,32,97,114,101,32,49,32,40,109,111,118,101,32,114,101,108,97,116,105,118,101,32,116,111,32,99,117,114,114,101,110,116,32,112,111,115,105,116,105,111,110,44,10,112,111,115,105,116,105,118,101,32,111,114,32,110,101,103,97,116,105,118,101,41,44,32,97,110,100,32,50,32,40,109,111,118,101,32,114,101,108,97,116,105,118,101,32,116,111,32,101,110,100,32,111,102,32,102,105,108,101,44,32,117,115,117,97,108,108,121,10,110,101,103,97,116,105,118,101,44,32,97,108,116,104,111,117,103,104,32,109,97,110,121,
32,112,108,97,116,102,111,114,109,115,32,97,108,108,111,119,32,115,101,101,107,105,110,103,32,98,101,121,111,110,100,32,116,104,101,32,101,110,100,32,111,102,32,97,32,102,105,108,101,41,46,10,10,78,111,116,101,32,116,104,97,116,32,115,101,101,107,105,110,103,32,111,102,32,98,122,50,32,102,105,108,101,115,32,105,115,32,101,109,117,108,97,116,101,100,44,32,97,110,100,32,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,112,97,114,97,109,101,116,101,114,115,10,116,104,101,32,111,112,101,
114,97,116,105,111,110,32,109,97,121,32,98,101,32,101,120,116,114,101,109,101,108,121,32,115,108,111,119,46,10,0],"i8",ALLOC_NORMAL);ba=allocate([79,124,105,58,115,101,101,107,0],"i8",ALLOC_NORMAL);W=allocate([115,101,101,107,32,119,111,114,107,115,32,111,110,108,121,32,119,104,105,108,101,32,114,101,97,100,105,110,103,0],"i8",ALLOC_NORMAL);B=allocate([115,101,108,102,45,62,109,111,100,101,32,33,61,32,50,0],"i8",ALLOC_NORMAL);Y=allocate([66,90,50,70,105,108,101,95,115,101,101,107,0],"i8",ALLOC_NORMAL);
fa=allocate([115,101,101,107,0],"i8",ALLOC_NORMAL);ha=allocate([40,105,41,0],"i8",ALLOC_NORMAL);la=allocate([116,101,108,108,40,41,32,45,62,32,105,110,116,10,10,82,101,116,117,114,110,32,116,104,101,32,99,117,114,114,101,110,116,32,102,105,108,101,32,112,111,115,105,116,105,111,110,44,32,97,110,32,105,110,116,101,103,101,114,32,40,109,97,121,32,98,101,32,97,32,108,111,110,103,32,105,110,116,101,103,101,114,41,46,10,0],"i8",ALLOC_NORMAL);ra=allocate([99,108,111,115,101,40,41,32,45,62,32,78,111,110,
101,32,111,114,32,40,112,101,114,104,97,112,115,41,32,97,110,32,105,110,116,101,103,101,114,10,10,67,108,111,115,101,32,116,104,101,32,102,105,108,101,46,32,83,101,116,115,32,100,97,116,97,32,97,116,116,114,105,98,117,116,101,32,46,99,108,111,115,101,100,32,116,111,32,116,114,117,101,46,32,65,32,99,108,111,115,101,100,32,102,105,108,101,10,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,102,111,114,32,102,117,114,116,104,101,114,32,73,47,79,32,111,112,101,114,97,116,105,111,110,115,46,32,99,
108,111,115,101,40,41,32,109,97,121,32,98,101,32,99,97,108,108,101,100,32,109,111,114,101,10,116,104,97,110,32,111,110,99,101,32,119,105,116,104,111,117,116,32,101,114,114,111,114,46,10,0],"i8",ALLOC_NORMAL);ya=allocate([99,108,111,115,101,0],"i8",ALLOC_NORMAL);Da=allocate([95,95,101,110,116,101,114,95,95,40,41,32,45,62,32,115,101,108,102,46,0],"i8",ALLOC_NORMAL);Ua=allocate([95,95,101,120,105,116,95,95,40,42,101,120,99,105,110,102,111,41,32,45,62,32,78,111,110,101,46,32,32,67,108,111,115,101,115,
32,116,104,101,32,102,105,108,101,46,0],"i8",ALLOC_NORMAL);Na=allocate([114,101,97,100,0],"i8",ALLOC_NORMAL);Pa=allocate([114,101,97,100,108,105,110,101,0],"i8",ALLOC_NORMAL);wa=allocate([114,101,97,100,108,105,110,101,115,0],"i8",ALLOC_NORMAL);Ya=allocate([120,114,101,97,100,108,105,110,101,115,0],"i8",ALLOC_NORMAL);Ha=allocate([119,114,105,116,101,0],"i8",ALLOC_NORMAL);ta=allocate([119,114,105,116,101,108,105,110,101,115,0],"i8",ALLOC_NORMAL);Va=allocate([116,101,108,108,0],"i8",ALLOC_NORMAL);Ia=
allocate([95,95,101,110,116,101,114,95,95,0],"i8",ALLOC_NORMAL);Wa=allocate([95,95,101,120,105,116,95,95,0],"i8",ALLOC_NORMAL);ia=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ba=allocate([13,0],"i8",ALLOC_NORMAL);Xa=allocate([10,0],"i8",ALLOC_NORMAL);Ta=allocate([40,115,115,41,0],"i8",ALLOC_NORMAL);Ea=allocate([13,10,0],"i8",ALLOC_NORMAL);Ga=allocate([40,115,115,115,41,0],"i8",ALLOC_NORMAL);ka=allocate([85,110,
107,110,111,119,110,32,110,101,119,108,105,110,101,115,32,118,97,108,117,101,32,48,120,37,120,10,0],"i8",ALLOC_NORMAL);Fa=allocate([109,111,100,101,0],"i8",ALLOC_NORMAL);ma=allocate([110,97,109,101,0],"i8",ALLOC_NORMAL);La=allocate([99,108,111,115,101,100,0],"i8",ALLOC_NORMAL);Za=allocate([84,114,117,101,32,105,102,32,116,104,101,32,102,105,108,101,32,105,115,32,99,108,111,115,101,100,0],"i8",ALLOC_NORMAL);Ka=allocate([110,101,119,108,105,110,101,115,0],"i8",ALLOC_NORMAL);Ra=allocate([101,110,100,
45,111,102,45,108,105,110,101,32,99,111,110,118,101,110,116,105,111,110,32,117,115,101,100,32,105,110,32,116,104,105,115,32,102,105,108,101,0],"i8",ALLOC_NORMAL);$a=allocate([102,105,108,101,32,109,111,100,101,32,40,39,114,39,44,32,39,119,39,44,32,111,114,32,39,85,39,41,0],"i8",ALLOC_NORMAL);Ja=allocate([102,105,108,101,32,110,97,109,101,0],"i8",ALLOC_NORMAL);ja=allocate(100,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",
0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ua=allocate([115,111,102,116,115,112,97,99,101,0],"i8",ALLOC_NORMAL);bb=allocate([102,108,97,103,32,105,110,100,105,99,97,116,105,110,103,32,116,104,97,116,32,97,32,115,112,97,99,101,32,110,101,101,100,115,32,116,111,32,98,101,32,112,114,105,110,116,101,100,59,32,117,115,101,100,32,98,121,32,112,114,105,110,116,0],"i8",ALLOC_NORMAL);qa=allocate([0,0,0,0,1,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);P=allocate([114,0],"i8",ALLOC_NORMAL);hb=allocate([79,124,115,105,105,58,66,90,50,70,105,108,101,0],"i8",ALLOC_NORMAL);Qa=allocate(20,"i8*",ALLOC_NORMAL);mb=allocate([102,105,108,101,110,97,109,101,0],"i8",ALLOC_NORMAL);S=allocate([98,117,102,102,101,114,105,110,103,0],"i8",ALLOC_NORMAL);Ca=allocate([99,111,109,112,
114,101,115,115,108,101,118,101,108,0],"i8",ALLOC_NORMAL);pa=allocate([99,111,109,112,114,101,115,115,108,101,118,101,108,32,109,117,115,116,32,98,101,32,98,101,116,119,101,101,110,32,49,32,97,110,100,32,57,0],"i8",ALLOC_NORMAL);Aa=allocate([105,110,118,97,108,105,100,32,109,111,100,101,32,99,104,97,114,32,37,99,0],"i8",ALLOC_NORMAL);ob=allocate([114,98,0],"i8",ALLOC_NORMAL);ib=allocate([119,98,0],"i8",ALLOC_NORMAL);ca=allocate([40,79,115,105,41,0],"i8",ALLOC_NORMAL);na=allocate([66,90,50,70,105,
108,101,40,110,97,109,101,32,91,44,32,109,111,100,101,61,39,114,39,44,32,98,117,102,102,101,114,105,110,103,61,48,44,32,99,111,109,112,114,101,115,115,108,101,118,101,108,61,57,93,41,32,45,62,32,102,105,108,101,32,111,98,106,101,99,116,10,10,79,112,101,110,32,97,32,98,122,50,32,102,105,108,101,46,32,84,104,101,32,109,111,100,101,32,99,97,110,32,98,101,32,39,114,39,32,111,114,32,39,119,39,44,32,102,111,114,32,114,101,97,100,105,110,103,32,40,100,101,102,97,117,108,116,41,32,111,114,10,119,114,105,
116,105,110,103,46,32,87,104,101,110,32,111,112,101,110,101,100,32,102,111,114,32,119,114,105,116,105,110,103,44,32,116,104,101,32,102,105,108,101,32,119,105,108,108,32,98,101,32,99,114,101,97,116,101,100,32,105,102,32,105,116,32,100,111,101,115,110,39,116,10,101,120,105,115,116,44,32,97,110,100,32,116,114,117,110,99,97,116,101,100,32,111,116,104,101,114,119,105,115,101,46,32,73,102,32,116,104,101,32,98,117,102,102,101,114,105,110,103,32,97,114,103,117,109,101,110,116,32,105,115,32,103,105,118,101,
110,44,32,48,32,109,101,97,110,115,10,117,110,98,117,102,102,101,114,101,100,44,32,97,110,100,32,108,97,114,103,101,114,32,110,117,109,98,101,114,115,32,115,112,101,99,105,102,121,32,116,104,101,32,98,117,102,102,101,114,32,115,105,122,101,46,32,73,102,32,99,111,109,112,114,101,115,115,108,101,118,101,108,10,105,115,32,103,105,118,101,110,44,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,32,98,101,116,119,101,101,110,32,49,32,97,110,100,32,57,46,10,10,65,100,100,32,97,32,39,85,39,32,
116,111,32,109,111,100,101,32,116,111,32,111,112,101,110,32,116,104,101,32,102,105,108,101,32,102,111,114,32,105,110,112,117,116,32,119,105,116,104,32,117,110,105,118,101,114,115,97,108,32,110,101,119,108,105,110,101,10,115,117,112,112,111,114,116,46,32,65,110,121,32,108,105,110,101,32,101,110,100,105,110,103,32,105,110,32,116,104,101,32,105,110,112,117,116,32,102,105,108,101,32,119,105,108,108,32,98,101,32,115,101,101,110,32,97,115,32,97,32,39,92,110,39,32,105,110,10,80,121,116,104,111,110,46,32,
65,108,115,111,44,32,97,32,102,105,108,101,32,115,111,32,111,112,101,110,101,100,32,103,97,105,110,115,32,116,104,101,32,97,116,116,114,105,98,117,116,101,32,39,110,101,119,108,105,110,101,115,39,59,32,116,104,101,32,118,97,108,117,101,10,102,111,114,32,116,104,105,115,32,97,116,116,114,105,98,117,116,101,32,105,115,32,111,110,101,32,111,102,32,78,111,110,101,32,40,110,111,32,110,101,119,108,105,110,101,32,114,101,97,100,32,121,101,116,41,44,32,39,92,114,39,44,32,39,92,110,39,44,10,39,92,114,92,110,
39,32,111,114,32,97,32,116,117,112,108,101,32,99,111,110,116,97,105,110,105,110,103,32,97,108,108,32,116,104,101,32,110,101,119,108,105,110,101,32,116,121,112,101,115,32,115,101,101,110,46,32,85,110,105,118,101,114,115,97,108,10,110,101,119,108,105,110,101,115,32,97,114,101,32,97,118,97,105,108,97,98,108,101,32,111,110,108,121,32,119,104,101,110,32,114,101,97,100,105,110,103,46,10,0],"i8",ALLOC_NORMAL);O=allocate([98,122,50,46,66,90,50,70,105,108,101,0],"i8",ALLOC_NORMAL);Ma=allocate([1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,
0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);$=allocate([99,111,109,112,114,101,115,115,40,100,97,116,97,41,32,45,62,32,115,116,114,105,110,103,10,10,80,114,111,118,105,100,101,32,109,111,114,101,32,100,97,116,97,32,116,111,32,116,104,101,32,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,116,46,32,73,116,32,119,105,108,108,32,114,101,116,
117,114,110,32,99,104,117,110,107,115,32,111,102,10,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,32,119,104,101,110,101,118,101,114,32,112,111,115,115,105,98,108,101,46,32,87,104,101,110,32,121,111,117,39,118,101,32,102,105,110,105,115,104,101,100,32,112,114,111,118,105,100,105,110,103,32,100,97,116,97,10,116,111,32,99,111,109,112,114,101,115,115,44,32,99,97,108,108,32,116,104,101,32,102,108,117,115,104,40,41,32,109,101,116,104,111,100,32,116,111,32,102,105,110,105,115,104,32,116,104,101,
32,99,111,109,112,114,101,115,115,105,111,110,32,112,114,111,99,101,115,115,44,10,97,110,100,32,114,101,116,117,114,110,32,119,104,97,116,32,105,115,32,108,101,102,116,32,105,110,32,116,104,101,32,105,110,116,101,114,110,97,108,32,98,117,102,102,101,114,115,46,10,0],"i8",ALLOC_NORMAL);ga=allocate([115,42,58,99,111,109,112,114,101,115,115,0],"i8",ALLOC_NORMAL);Sa=allocate([116,104,105,115,32,111,98,106,101,99,116,32,119,97,115,32,97,108,114,101,97,100,121,32,102,108,117,115,104,101,100,0],"i8",ALLOC_NORMAL);
X=allocate([102,108,117,115,104,40,41,32,45,62,32,115,116,114,105,110,103,10,10,70,105,110,105,115,104,32,116,104,101,32,99,111,109,112,114,101,115,115,105,111,110,32,112,114,111,99,101,115,115,32,97,110,100,32,114,101,116,117,114,110,32,119,104,97,116,32,105,115,32,108,101,102,116,32,105,110,32,105,110,116,101,114,110,97,108,32,98,117,102,102,101,114,115,46,10,89,111,117,32,109,117,115,116,32,110,111,116,32,117,115,101,32,116,104,101,32,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,
116,32,97,102,116,101,114,32,99,97,108,108,105,110,103,32,116,104,105,115,32,109,101,116,104,111,100,46,10,0],"i8",ALLOC_NORMAL);oa=allocate([111,98,106,101,99,116,32,119,97,115,32,97,108,114,101,97,100,121,32,102,108,117,115,104,101,100,0],"i8",ALLOC_NORMAL);ab=allocate([99,111,109,112,114,101,115,115,0],"i8",ALLOC_NORMAL);Oa=allocate([102,108,117,115,104,0],"i8",ALLOC_NORMAL);va=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,
0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);U=allocate([124,105,58,66,90,50,67,111,109,112,114,101,115,115,111,114,0],"i8",ALLOC_NORMAL);fb=allocate(8,"i8*",ALLOC_NORMAL);Cb=allocate([66,90,50,67,111,109,112,114,101,115,
115,111,114,40,91,99,111,109,112,114,101,115,115,108,101,118,101,108,61,57,93,41,32,45,62,32,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,116,10,10,67,114,101,97,116,101,32,97,32,110,101,119,32,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,116,46,32,84,104,105,115,32,111,98,106,101,99,116,32,109,97,121,32,98,101,32,117,115,101,100,32,116,111,32,99,111,109,112,114,101,115,115,10,100,97,116,97,32,115,101,113,117,101,110,116,105,97,108,108,121,46,32,73,102,32,121,111,117,
32,119,97,110,116,32,116,111,32,99,111,109,112,114,101,115,115,32,100,97,116,97,32,105,110,32,111,110,101,32,115,104,111,116,44,32,117,115,101,32,116,104,101,10,99,111,109,112,114,101,115,115,40,41,32,102,117,110,99,116,105,111,110,32,105,110,115,116,101,97,100,46,32,84,104,101,32,99,111,109,112,114,101,115,115,108,101,118,101,108,32,112,97,114,97,109,101,116,101,114,44,32,105,102,32,103,105,118,101,110,44,10,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,32,98,101,116,119,101,101,110,
32,49,32,97,110,100,32,57,46,10,0],"i8",ALLOC_NORMAL);xb=allocate([98,122,50,46,66,90,50,67,111,109,112,114,101,115,115,111,114,0],"i8",ALLOC_NORMAL);db=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",
0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",
0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",
0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);gb=allocate([117,110,117,115,101,100,95,100,97,116,97,0],"i8",ALLOC_NORMAL);rb=allocate([0,0,0,0,6,0,0,0,60,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);sb=allocate([100,101,99,111,109,112,114,101,115,115,40,100,97,116,97,41,32,45,62,32,115,116,114,105,110,103,10,10,80,114,111,118,105,100,101,32,109,111,114,101,32,100,97,116,97,32,116,111,32,116,104,101,32,100,101,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,116,46,32,73,116,32,119,105,108,108,32,114,101,116,117,114,110,32,99,104,117,110,107,
115,10,111,102,32,100,101,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,32,119,104,101,110,101,118,101,114,32,112,111,115,115,105,98,108,101,46,32,73,102,32,121,111,117,32,116,114,121,32,116,111,32,100,101,99,111,109,112,114,101,115,115,32,100,97,116,97,10,97,102,116,101,114,32,116,104,101,32,101,110,100,32,111,102,32,115,116,114,101,97,109,32,105,115,32,102,111,117,110,100,44,32,69,79,70,69,114,114,111,114,32,119,105,108,108,32,98,101,32,114,97,105,115,101,100,46,32,73,102,32,97,110,121,
32,100,97,116,97,10,119,97,115,32,102,111,117,110,100,32,97,102,116,101,114,32,116,104,101,32,101,110,100,32,111,102,32,115,116,114,101,97,109,44,32,105,116,39,108,108,32,98,101,32,105,103,110,111,114,101,100,32,97,110,100,32,115,97,118,101,100,32,105,110,10,117,110,117,115,101,100,95,100,97,116,97,32,97,116,116,114,105,98,117,116,101,46,10,0],"i8",ALLOC_NORMAL);Kb=allocate([115,42,58,100,101,99,111,109,112,114,101,115,115,0],"i8",ALLOC_NORMAL);Gb=allocate([101,110,100,32,111,102,32,115,116,114,101,
97,109,32,119,97,115,32,97,108,114,101,97,100,121,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);Nb=allocate([100,101,99,111,109,112,114,101,115,115,0],"i8",ALLOC_NORMAL);Ab=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Sb=allocate([58,66,
90,50,68,101,99,111,109,112,114,101,115,115,111,114,0],"i8",ALLOC_NORMAL);pb=allocate([66,90,50,68,101,99,111,109,112,114,101,115,115,111,114,40,41,32,45,62,32,100,101,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,116,10,10,67,114,101,97,116,101,32,97,32,110,101,119,32,100,101,99,111,109,112,114,101,115,115,111,114,32,111,98,106,101,99,116,46,32,84,104,105,115,32,111,98,106,101,99,116,32,109,97,121,32,98,101,32,117,115,101,100,32,116,111,32,100,101,99,111,109,112,114,101,115,115,10,
100,97,116,97,32,115,101,113,117,101,110,116,105,97,108,108,121,46,32,73,102,32,121,111,117,32,119,97,110,116,32,116,111,32,100,101,99,111,109,112,114,101,115,115,32,100,97,116,97,32,105,110,32,111,110,101,32,115,104,111,116,44,32,117,115,101,32,116,104,101,10,100,101,99,111,109,112,114,101,115,115,40,41,32,102,117,110,99,116,105,111,110,32,105,110,115,116,101,97,100,46,10,0],"i8",ALLOC_NORMAL);Mb=allocate([98,122,50,46,66,90,50,68,101,99,111,109,112,114,101,115,115,111,114,0],"i8",ALLOC_NORMAL);
tb=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,
"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Hb=allocate([99,111,109,112,114,101,115,115,40,100,97,116,97,32,91,44,32,99,111,109,112,114,101,115,115,108,101,118,101,108,61,57,93,41,32,45,62,32,115,116,114,105,110,103,10,10,67,111,109,112,114,101,115,115,32,100,97,116,97,32,105,110,32,111,110,101,32,115,104,111,116,46,32,73,102,32,
121,111,117,32,119,97,110,116,32,116,111,32,99,111,109,112,114,101,115,115,32,100,97,116,97,32,115,101,113,117,101,110,116,105,97,108,108,121,44,10,117,115,101,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,66,90,50,67,111,109,112,114,101,115,115,111,114,32,105,110,115,116,101,97,100,46,32,84,104,101,32,99,111,109,112,114,101,115,115,108,101,118,101,108,32,112,97,114,97,109,101,116,101,114,44,32,105,102,10,103,105,118,101,110,44,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,
32,98,101,116,119,101,101,110,32,49,32,97,110,100,32,57,46,10,0],"i8",ALLOC_NORMAL);da=allocate([115,42,124,105,0],"i8",ALLOC_NORMAL);Jb=allocate(12,"i8*",ALLOC_NORMAL);jb=allocate([100,97,116,97,0],"i8",ALLOC_NORMAL);bc=allocate([100,101,99,111,109,112,114,101,115,115,40,100,97,116,97,41,32,45,62,32,100,101,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,10,10,68,101,99,111,109,112,114,101,115,115,32,100,97,116,97,32,105,110,32,111,110,101,32,115,104,111,116,46,32,73,102,32,121,111,117,32,
119,97,110,116,32,116,111,32,100,101,99,111,109,112,114,101,115,115,32,100,97,116,97,32,115,101,113,117,101,110,116,105,97,108,108,121,44,10,117,115,101,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,66,90,50,68,101,99,111,109,112,114,101,115,115,111,114,32,105,110,115,116,101,97,100,46,10,0],"i8",ALLOC_NORMAL);Wb=allocate([99,111,117,108,100,110,39,116,32,102,105,110,100,32,101,110,100,32,111,102,32,115,116,114,101,97,109,0],"i8",ALLOC_NORMAL);lb=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);kb=allocate([84,104,101,32,112,121,116,104,111,110,32,98,122,50,32,109,111,100,117,108,101,32,112,
114,111,118,105,100,101,115,32,97,32,99,111,109,112,114,101,104,101,110,115,105,118,101,32,105,110,116,101,114,102,97,99,101,32,102,111,114,10,116,104,101,32,98,122,50,32,99,111,109,112,114,101,115,115,105,111,110,32,108,105,98,114,97,114,121,46,32,73,116,32,105,109,112,108,101,109,101,110,116,115,32,97,32,99,111,109,112,108,101,116,101,32,102,105,108,101,10,105,110,116,101,114,102,97,99,101,44,32,111,110,101,32,115,104,111,116,32,40,100,101,41,99,111,109,112,114,101,115,115,105,111,110,32,102,117,
110,99,116,105,111,110,115,44,32,97,110,100,32,116,121,112,101,115,32,102,111,114,10,115,101,113,117,101,110,116,105,97,108,32,40,100,101,41,99,111,109,112,114,101,115,115,105,111,110,46,10,0],"i8",ALLOC_NORMAL);Lb=allocate([98,122,50,0],"i8",ALLOC_NORMAL);Eb=allocate([95,95,97,117,116,104,111,114,95,95,0],"i8",ALLOC_NORMAL);Yb=allocate([66,90,50,70,105,108,101,0],"i8",ALLOC_NORMAL);yb=allocate([66,90,50,67,111,109,112,114,101,115,115,111,114,0],"i8",ALLOC_NORMAL);fc=allocate([66,90,50,68,101,99,
111,109,112,114,101,115,115,111,114,0],"i8",ALLOC_NORMAL);HEAP[ia]=Na;HEAP[ia+4]=g+2;HEAP[ia+12]=z;HEAP[ia+16]=Pa;HEAP[ia+20]=g+4;HEAP[ia+28]=R;HEAP[ia+32]=wa;HEAP[ia+36]=g+6;HEAP[ia+44]=L;HEAP[ia+48]=Ya;HEAP[ia+52]=g+8;HEAP[ia+60]=J;HEAP[ia+64]=Ha;HEAP[ia+68]=g+10;HEAP[ia+76]=F;HEAP[ia+80]=ta;HEAP[ia+84]=g+12;HEAP[ia+92]=Z;HEAP[ia+96]=fa;HEAP[ia+100]=g+14;HEAP[ia+108]=H;HEAP[ia+112]=Va;HEAP[ia+116]=g+16;HEAP[ia+124]=la;HEAP[ia+128]=ya;HEAP[ia+132]=g+18;HEAP[ia+140]=ra;HEAP[ia+144]=Ia;HEAP[ia+148]=
g+20;HEAP[ia+156]=Da;HEAP[ia+160]=Wa;HEAP[ia+164]=g+22;HEAP[ia+172]=Ua;HEAP[ja]=La;HEAP[ja+4]=g+24;HEAP[ja+12]=Za;HEAP[ja+20]=Ka;HEAP[ja+24]=g+26;HEAP[ja+32]=Ra;HEAP[ja+40]=Fa;HEAP[ja+44]=g+28;HEAP[ja+52]=$a;HEAP[ja+60]=ma;HEAP[ja+64]=g+30;HEAP[ja+72]=Ja;HEAP[qa]=ua;HEAP[qa+16]=bb;HEAP[Qa]=mb;HEAP[Qa+4]=Fa;HEAP[Qa+8]=S;HEAP[Qa+12]=Ca;HEAP[Ma+12]=O;HEAP[Ma+24]=g+32;HEAP[Ma+72]=g+34;HEAP[Ma+76]=g+36;HEAP[Ma+88]=na;HEAP[Ma+108]=g+8;HEAP[Ma+112]=g+38;HEAP[Ma+116]=ia;HEAP[Ma+120]=qa;HEAP[Ma+124]=ja;HEAP[Ma+
148]=g+40;HEAP[Ma+152]=g+42;HEAP[Ma+156]=g+44;HEAP[Ma+160]=g+46;HEAP[va]=ab;HEAP[va+4]=g+48;HEAP[va+12]=$;HEAP[va+16]=Oa;HEAP[va+20]=g+50;HEAP[va+28]=X;HEAP[fb]=Ca;HEAP[db+12]=xb;HEAP[db+24]=g+52;HEAP[db+72]=g+34;HEAP[db+76]=g+36;HEAP[db+88]=Cb;HEAP[db+116]=va;HEAP[db+148]=g+54;HEAP[db+152]=g+42;HEAP[db+156]=g+44;HEAP[db+160]=g+46;HEAP[rb]=gb;HEAP[Ab]=Nb;HEAP[Ab+4]=g+56;HEAP[Ab+12]=sb;HEAP[tb+12]=Mb;HEAP[tb+24]=g+58;HEAP[tb+72]=g+34;HEAP[tb+76]=g+36;HEAP[tb+88]=pb;HEAP[tb+116]=Ab;HEAP[tb+120]=rb;
HEAP[tb+148]=g+60;HEAP[tb+152]=g+42;HEAP[tb+156]=g+44;HEAP[tb+160]=g+46;HEAP[Jb]=jb;HEAP[Jb+4]=Ca;HEAP[lb]=ab;HEAP[lb+4]=g+62;HEAP[lb+12]=Hb;HEAP[lb+16]=Nb;HEAP[lb+20]=g+64;HEAP[lb+28]=bc}var k={arguments:[]},l,m,n,o,p,q,r,u,s,t,v,w,x,y,z,C,A,G,E,D,R,M,L,I,J,F,V,Q,Z,K,N,H,ba,W,B,Y,fa,ha,la,ra,ya,Da,Ua,Na,Pa,wa,Ya,Ha,ta,Va,Ia,Wa,ia,Ba,Xa,Ta,Ea,Ga,ka,Fa,ma,La,Za,Ka,Ra,$a,Ja,ja,ua,bb,qa,P,hb,Qa,mb,S,Ca,pa,Aa,ob,ib,ca,na,O,Ma,$,ga,Sa,X,oa,ab,Oa,va,U,fb,Cb,xb,db,gb,rb,sb,Kb,Gb,Nb,Ab,Sb,pb,Mb,tb,Hb,da,
Jb,jb,bc,Wb,lb,kb,Lb,Eb,Yb,yb,fc;k._initbz2=function(){var a;for(a=-1;;)switch(a){case -1:var b;a=_PyType_Ready(Ma)<0?5:1;break;case 1:a=_PyType_Ready(db)<0?5:2;break;case 2:a=_PyType_Ready(tb)<0?5:3;break;case 3:b=_Py_InitModule4(Lb,lb,kb,0,1013);a=b==0?5:4;break;case 4:a=_PyString_FromString(l);_PyModule_AddObject(b,Eb,a);HEAP[Ma]+=1;_PyModule_AddObject(b,Yb,Ma);HEAP[db]+=1;_PyModule_AddObject(b,yb,db);HEAP[tb]+=1;_PyModule_AddObject(b,fc,tb);a=5;break;case 5:return;default:assert(0,"bad label: "+
a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(c,f){var g=STACKTOP;STACKTOP+=12;_memset(g,0,12);var h,j=null;for(h=-1;;)switch(h){case -1:var k,l,m=g,n,o,p=g+4,q=g+8;k=c;h=f;HEAP[m]=-1;HEAP[q]=0;h=_PyArg_ParseTuple(h,C,allocate([m,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:l=0;h=25;break;case 2:h=HEAP[k+44];h=h==0?5:h==1?3:h==2?4:6;break;case 3:h=e(k)!=0?24:7;break;case 4:h=_PyString_FromString(A);HEAP[q]=h;h=24;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],G);h=24;break;
case 6:_PyErr_SetString(HEAP[_PyExc_IOError],E);h=24;break;case 7:h=HEAP[m]<0?8:9;break;case 8:var B=a(0);o=B;j=8;h=10;break;case 9:var r=HEAP[m];o=r;j=9;h=10;break;case 10:h=(j==9?r:B)<0?11:12;break;case 11:_PyErr_SetString(HEAP[_PyExc_OverflowError],D);h=24;break;case 12:h=_PyString_FromStringAndSize(0,o);HEAP[q]=h;h=HEAP[q]==0?24:13;break;case 13:n=0;h=14;break;case 14:h=d(p,HEAP[k+40],HEAP[q]+20+n,o-n,k);HEAP[k+48]=h+HEAP[k+48];n=h+n;h=HEAP[p]==4?15:16;break;case 15:HEAP[k+56]=HEAP[k+48];HEAP[k+
44]=2;h=22;break;case 16:h=HEAP[p]!=0?17:20;break;case 17:b(HEAP[p]);h=HEAP[q];HEAP[h]-=1;h=HEAP[h]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[HEAP[q]+4]+24]](HEAP[q]);h=19;break;case 19:HEAP[q]=0;h=24;break;case 20:h=HEAP[m]<0?21:22;break;case 21:o=a(o);h=__PyString_Resize(q,o)<0?24:14;break;case 22:h=n!=o?23:24;break;case 23:__PyString_Resize(q,n);h=24;break;case 24:l=HEAP[q];h=25;break;case 25:return j=l,STACKTOP=g,j;default:assert(0,"bad label: "+h)}},0,function(a,b){var d=STACKTOP;STACKTOP+=
4;_memset(d,0,4);var f;for(f=-1;;)switch(f){case -1:var g,h,j,k=d;g=a;f=b;j=0;HEAP[k]=-1;f=_PyArg_ParseTuple(f,M,allocate([k,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;f=11;break;case 2:f=HEAP[g+44];f=f==0?5:f==1?3:f==2?4:6;break;case 3:f=e(g)!=0?10:7;break;case 4:j=_PyString_FromString(A);f=10;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],G);f=10;break;case 6:_PyErr_SetString(HEAP[_PyExc_IOError],E);f=10;break;case 7:f=HEAP[k]==0?8:9;break;case 8:j=_PyString_FromString(A);
f=10;break;case 9:j=c(g,HEAP[k]>=0?HEAP[k]:0);f=10;break;case 10:h=j;f=11;break;case 11:return g=h,STACKTOP=d,g;default:assert(0,"bad label: "+f)}},0,function(a,f){var g=STACKTOP;STACKTOP+=8208;_memset(g,0,8208);var h,j=null;for(h=-1;;)switch(h){case -1:var k,l,m=g,n,o=g+4,p=g+8,q,B,r=g+8200,H,u,t,fa,P,ra,v,O,w=g+8204,W;k=a;h=f;n=HEAP[m]=0;q=p;B=8192;O=t=H=HEAP[r]=0;h=_PyArg_ParseTuple(h,I,allocate([m,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:l=0;h=53;break;case 2:h=HEAP[k+44];h=h==
0?5:h==1?3:h==2?4:6;break;case 3:h=e(k)!=0?49:7;break;case 4:n=_PyList_New(0);h=49;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],G);h=49;break;case 6:_PyErr_SetString(HEAP[_PyExc_IOError],E);h=49;break;case 7:n=_PyList_New(0);h=n==0?49:8;break;case 8:var x=p;h=9;break;case 9:u=d(w,HEAP[k+40],q+H,B-H,k);HEAP[k+48]=u+HEAP[k+48];h=HEAP[w]==4?10:13;break;case 10:HEAP[k+56]=HEAP[k+48];HEAP[k+44]=2;h=u==0?11:12;break;case 11:HEAP[m]=0;h=37;break;case 12:O=1;h=18;break;case 13:h=HEAP[w]!=0?14:18;
break;case 14:b(HEAP[w]);h=15;break;case 15:HEAP[n]-=1;h=HEAP[n]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);h=17;break;case 17:n=0;h=49;break;case 18:t=u+t;fa=_memchr(q+H,10,u);h=O==0?19:26;break;case 19:h=fa==0?20:26;break;case 20:H=u+H;B*=2;h=B<0?21:22;break;case 21:_PyErr_SetString(HEAP[_PyExc_OverflowError],s);h=15;break;case 22:var ga=B;h=HEAP[r]==0?23:25;break;case 23:h=_PyString_FromStringAndSize(0,ga);HEAP[r]=h;h=HEAP[r]==0?15:24;break;case 24:q=HEAP[r]+20;_llvm_memcpy_p0i8_p0i8_i32(q,
x,H,1,0);h=9;break;case 25:__PyString_Resize(r,ga);q=HEAP[r]+20;h=9;break;case 26:ra=q+H+u;P=q;var U=fa,j=26;h=32;break;case 27:fa+=1;h=_PyString_FromStringAndSize(P,fa-P);HEAP[o]=h;h=HEAP[o]==0?15:28;break;case 28:v=_PyList_Append(n,HEAP[o]);h=HEAP[o];HEAP[h]-=1;h=HEAP[h]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);h=30;break;case 30:h=v!=0?15:31;break;case 31:P=fa;var ya=_memchr(P,10,ra-P);fa=ya;j=31;h=32;break;case 32:h=(j==31?ya:U)!=0?27:33;break;case 33:H=ra-P;_llvm_memmove_p0i8_p0i8_i32(q,
P,H,1,0);h=HEAP[m]>0?34:35;break;case 34:h=HEAP[m]<=t?37:35;break;case 35:h=O!=0?36:9;break;case 36:HEAP[m]=0;h=37;break;case 37:h=H!=0?38:49;break;case 38:h=_PyString_FromStringAndSize(q,H);HEAP[o]=h;h=HEAP[o]==0?15:39;break;case 39:h=HEAP[m]>0?40:46;break;case 40:W=c(k,0);h=W==0?41:43;break;case 41:h=HEAP[o];HEAP[h]-=1;h=HEAP[h]==0?42:15;break;case 42:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);h=15;break;case 43:_PyString_Concat(o,W);HEAP[W]-=1;h=HEAP[W]==0?44:45;break;case 44:FUNCTION_TABLE[HEAP[HEAP[W+
4]+24]](W);h=45;break;case 45:h=HEAP[o]==0?15:46;break;case 46:v=_PyList_Append(n,HEAP[o]);h=HEAP[o];HEAP[h]-=1;h=HEAP[h]==0?47:48;break;case 47:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);h=48;break;case 48:h=v!=0?15:49;break;case 49:h=HEAP[r]!=0?50:52;break;case 50:h=HEAP[r];HEAP[h]-=1;h=HEAP[h]==0?51:52;break;case 51:FUNCTION_TABLE[HEAP[HEAP[HEAP[r]+4]+24]](HEAP[r]);h=52;break;case 52:l=n;h=53;break;case 53:return j=l,STACKTOP=g,j;default:assert(0,"bad label: "+h)}},0,function(a){var b;for(b=
-1;;)switch(b){case -1:var c,e;c=a;b=HEAP[c+44]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],G);e=0;b=3;break;case 2:HEAP[c]+=1;e=c;b=3;break;case 3:return a=e;default:assert(0,"bad label: "+b)}},0,function(a,c){var e=STACKTOP;STACKTOP+=56;_memset(e,0,56);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j=e,k,l,m=e+52;f=a;d=c;h=0;d=_PyArg_ParseTuple(d,V,allocate([j,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;d=9;break;case 2:k=HEAP[j];l=HEAP[j+8];d=HEAP[f+
44];d=d==0?4:d==3?3:5;break;case 3:HEAP[f+24]=0;_BZ2_bzWrite(m,HEAP[f+40],k,l);HEAP[f+48]=l+HEAP[f+48];d=HEAP[m]!=0?6:7;break;case 4:_PyErr_SetString(HEAP[_PyExc_ValueError],G);d=8;break;case 5:_PyErr_SetString(HEAP[_PyExc_IOError],Q);d=8;break;case 6:b(HEAP[m]);d=8;break;case 7:HEAP[__Py_NoneStruct]+=1;h=__Py_NoneStruct;d=8;break;case 8:_PyBuffer_Release(j);g=h;d=9;break;case 9:return f=g,STACKTOP=e,f;default:assert(0,"bad label: "+d)}},0,function(a,c){var e=STACKTOP;STACKTOP+=12;_memset(e,0,12);
var d,f=null;for(d=-1;;)switch(d){case -1:var g,h,j,k,l,m,n,o,p,q,B=e,r,s=e+4,H=e+8;g=a;h=c;l=k=j=0;d=HEAP[g+44];d=d==0?2:d==3?1:3;break;case 1:q=(HEAP[HEAP[h+4]+84]&33554432)!=0;d=q==0?4:7;break;case 2:_PyErr_SetString(HEAP[_PyExc_ValueError],G);d=39;break;case 3:_PyErr_SetString(HEAP[_PyExc_IOError],Q);d=39;break;case 4:k=_PyObject_GetIter(h);d=k==0?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_TypeError],K);d=39;break;case 6:j=_PyList_New(1E3);d=j==0?42:7;break;case 7:p=0;d=8;break;case 8:d=q!=
0?9:14;break;case 9:d=j!=0?10:12;break;case 10:HEAP[j]-=1;d=HEAP[j]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=12;break;case 12:j=d=_PyList_GetSlice(h,p,p+1E3);d=d==0?42:13;break;case 13:var u=HEAP[j+8];o=u;f=13;d=20;break;case 14:o=0;f=14;d=18;break;case 15:m=_PyIter_Next(k);d=m==0?16:17;break;case 16:d=_PyErr_Occurred()!=0?39:19;break;case 17:_PyList_SetItem(j,o,m);var t=o+1;o=t;f=17;d=18;break;case 18:d=(f==17?t:0)<=999?15:19;break;case 19:var fa=o,f=19;d=20;break;case 20:d=
(f==19?fa:u)==0?38:21;break;case 21:n=0;d=30;break;case 22:r=HEAP[HEAP[j+12]+4*n];d=(HEAP[HEAP[r+4]+84]&134217728)==0?23:29;break;case 23:d=_PyObject_AsCharBuffer(r,s,H)!=0?24:25;break;case 24:_PyErr_SetString(HEAP[_PyExc_TypeError],N);d=39;break;case 25:m=_PyString_FromStringAndSize(HEAP[s],HEAP[H]);d=m==0?39:26;break;case 26:HEAP[r]-=1;d=HEAP[r]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);d=28;break;case 28:HEAP[HEAP[j+12]+4*n]=m;d=29;break;case 29:n+=1;d=30;break;case 30:d=n<o?
22:31;break;case 31:n=HEAP[g+24]=0;d=35;break;case 32:m=HEAP[HEAP[j+12]+4*n];d=HEAP[m+8];_BZ2_bzWrite(B,HEAP[g+40],m+20,d);d=HEAP[B]!=0?33:34;break;case 33:b(HEAP[B]);d=39;break;case 34:n+=1;d=35;break;case 35:d=n<o?32:36;break;case 36:d=o<=999?38:37;break;case 37:p+=1E3;d=8;break;case 38:HEAP[__Py_NoneStruct]+=1;l=__Py_NoneStruct;d=39;break;case 39:d=j!=0?40:42;break;case 40:HEAP[j]-=1;d=HEAP[j]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=42;break;case 42:d=k!=0?43:45;break;case 43:HEAP[k]-=
1;d=HEAP[k]==0?44:45;break;case 44:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=45;break;case 45:return f=l,STACKTOP=e,f;default:assert(0,"bad label: "+d)}},0,function(a,c){var e=STACKTOP;STACKTOP+=8204;_memset(e,0,8204);var g,h=null;for(g=-1;;)switch(g){case -1:var j,k,l,m=e,n=e+4,o,p=e+8,q,r,s,H=e+8200,u;j=a;g=c;HEAP[m]=0;q=8192;u=r=0;g=_PyArg_ParseTuple(g,ba,allocate([n,0,0,0,m,0,0,0],["%struct.PyObject**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:l=0;g=47;break;case 2:var t=HEAP[n];g=(HEAP[HEAP[HEAP[n]+
4]+84]&16777216)!=0?3:4;break;case 3:k=_PyLong_AsLongLong(t);g=5;break;case 4:k=_PyInt_AsLong(t);g=5;break;case 5:o=k;g=_PyErr_Occurred()!=0?6:7;break;case 6:l=0;g=47;break;case 7:f(j);g=HEAP[j+44];g=g==0?9:g==1?8:g==2?8:10;break;case 8:g=HEAP[m]==2?11:19;break;case 9:_PyErr_SetString(HEAP[_PyExc_ValueError],G);g=46;break;case 10:_PyErr_SetString(HEAP[_PyExc_IOError],W);g=46;break;case 11:g=HEAP[j+56]==-1?12:18;break;case 12:g=HEAP[j+44]==2?13:14;break;case 13:throw ___assert_fail(B,v,1068,Y),"Reached an unreachable!";
case 14:g=d(H,HEAP[j+40],p,q,j);HEAP[j+48]=g+HEAP[j+48];r=g+r;g=HEAP[H]==4?17:15;break;case 15:g=HEAP[H]!=0?16:14;break;case 16:b(HEAP[H]);g=46;break;case 17:HEAP[j+44]=2;HEAP[j+56]=HEAP[j+48];r=0;g=18;break;case 18:o+=HEAP[j+56];g=21;break;case 19:g=HEAP[m]==1?20:21;break;case 20:o+=HEAP[j+48];g=21;break;case 21:var P=j;g=HEAP[j+48]<=o?22:23;break;case 22:var ra=o-HEAP[P+48];o=ra;h=22;g=35;break;case 23:_BZ2_bzReadClose(H,HEAP[P+40]);g=HEAP[j+40]!=0?24:25;break;case 24:_PyFile_DecUseCount(HEAP[j+
8]);HEAP[j+40]=0;g=25;break;case 25:g=HEAP[H]!=0?26:27;break;case 26:b(HEAP[H]);g=46;break;case 27:u=_PyObject_CallMethod(HEAP[j+8],fa,ha,allocate(4,"i32",ALLOC_STACK));g=u==0?46:28;break;case 28:HEAP[u]-=1;g=HEAP[u]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[u+4]+24]](u);g=30;break;case 30:u=0;HEAP[j+48]=0;g=_PyFile_AsFile(HEAP[j+8]);g=_BZ2_bzReadOpen(H,g,0,0,0,0);HEAP[j+40]=g;g=HEAP[j+40]!=0?31:32;break;case 31:_PyFile_IncUseCount(HEAP[j+8]);g=32;break;case 32:g=HEAP[H]!=0?33:34;break;case 33:b(HEAP[H]);
g=46;break;case 34:HEAP[j+44]=1;var O=o,h=34;g=35;break;case 35:g=(h==34?O:ra)<=0?45:36;break;case 36:g=HEAP[j+44]==2?45:37;break;case 37:g=o-r>q?38:39;break;case 38:s=q;g=40;break;case 39:s=(o&4294967295)-(r&4294967295);g=40;break;case 40:g=d(H,HEAP[j+40],p,s,j);HEAP[j+48]=g+HEAP[j+48];r=g+r;g=HEAP[H]==4?41:42;break;case 41:HEAP[j+56]=HEAP[j+48];HEAP[j+44]=2;g=45;break;case 42:g=HEAP[H]!=0?43:44;break;case 43:b(HEAP[H]);g=46;break;case 44:g=r==o?45:37;break;case 45:HEAP[__Py_NoneStruct]+=1;u=__Py_NoneStruct;
g=46;break;case 46:l=u;g=47;break;case 47:return h=l,STACKTOP=e,h;default:assert(0,"bad label: "+g)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,e;c=a;e=0;b=HEAP[c+44]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],G);b=3;break;case 2:e=_PyLong_FromLongLong(HEAP[c+48]);b=3;break;case 3:return a=e;default:assert(0,"bad label: "+b)}},0,function(a){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var e;for(e=-1;;)switch(e){case -1:var d,f,g=c;d=a;f=0;HEAP[g]=0;e=HEAP[d+44];e=e==1?
1:e==2?1:e==3?2:3;break;case 1:_BZ2_bzReadClose(g,HEAP[d+40]);e=3;break;case 2:_BZ2_bzWriteClose(g,HEAP[d+40],0,0,0);e=3;break;case 3:e=HEAP[d+40]!=0?4:5;break;case 4:_PyFile_DecUseCount(HEAP[d+8]);HEAP[d+40]=0;e=5;break;case 5:HEAP[d+44]=0;f=_PyObject_CallMethod(HEAP[d+8],ya,0,allocate(1,"i32",ALLOC_STACK));e=HEAP[g]!=0?6:10;break;case 6:b(HEAP[g]);e=f!=0?7:9;break;case 7:HEAP[f]-=1;e=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);e=9;break;case 9:f=0;e=10;break;case 10:return a=
f,STACKTOP=c,a;default:assert(0,"bad label: "+e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,e;c=a;b=HEAP[c+44]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],G);e=0;b=3;break;case 2:HEAP[c]+=1;e=c;b=3;break;case 3:return a=e;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,e;e=_PyObject_CallMethod(a,ya,0,allocate(1,"i32",ALLOC_STACK));b=e==0?1:2;break;case 1:c=0;b=5;break;case 2:HEAP[e]-=1;b=HEAP[e]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[e+
4]+24]](e);b=4;break;case 4:HEAP[__Py_NoneStruct]+=1;c=__Py_NoneStruct;b=5;break;case 5:return a=c;default:assert(0,"bad label: "+b)}},0,function(a){return _PyInt_FromLong(HEAP[a+44]==0)},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,e;c=a;b=HEAP[c+32];b=b==0?1:b==1?2:b==2?3:b==3?4:b==4?5:b==5?6:b==6?7:b==7?8:9;break;case 1:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;b=10;break;case 2:e=_PyString_FromString(Ba);b=10;break;case 3:e=_PyString_FromString(Xa);b=10;break;case 4:e=_Py_BuildValue(Ta,
allocate([Ba,0,0,0,Xa,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=10;break;case 5:e=_PyString_FromString(Ea);b=10;break;case 6:e=_Py_BuildValue(Ta,allocate([Ba,0,0,0,Ea,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=10;break;case 7:e=_Py_BuildValue(Ta,allocate([Xa,0,0,0,Ea,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=10;break;case 8:e=_Py_BuildValue(Ga,allocate([Ba,0,0,0,Xa,0,0,0,Ea,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=10;break;case 9:_PyErr_Format(HEAP[_PyExc_SystemError],
ka,allocate([HEAP[c+32],0,0,0],["i32",0,0,0],ALLOC_STACK));e=0;b=10;break;case 10:return a=e;default:assert(0,"bad label: "+b)}},0,function(a){return _PyObject_GetAttrString(HEAP[a+8],Fa)},0,function(a){return _PyObject_GetAttrString(HEAP[a+8],ma)},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);var c;for(c=-1;;)switch(c){case -1:var e,d=b;e=a;c=HEAP[e+44];c=c==1?1:c==2?1:c==3?2:3;break;case 1:_BZ2_bzReadClose(d,HEAP[e+40]);c=3;break;case 2:_BZ2_bzWriteClose(d,HEAP[e+40],0,0,0);c=3;break;
case 3:c=HEAP[e+40]!=0?4:5;break;case 4:_PyFile_DecUseCount(HEAP[e+8]);HEAP[e+40]=0;c=5;break;case 5:f(e);c=HEAP[e+8]!=0?6:8;break;case 6:c=HEAP[e+8];HEAP[c]-=1;c=HEAP[c]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[e+8]+4]+24]](HEAP[e+8]);c=8;break;case 8:FUNCTION_TABLE[HEAP[HEAP[e+4]+160]](e);STACKTOP=b;return;default:assert(0,"bad label: "+c)}},0,_PyObject_GenericGetAttr,0,_PyObject_GenericSetAttr,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,e,d;c=a;b=HEAP[c+44]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],
G);e=0;b=9;break;case 2:d=h(c,0,8192);b=d==0?7:3;break;case 3:var f=d;b=HEAP[f+8]==0?4:8;break;case 4:b=f!=0?5:7;break;case 5:HEAP[d]-=1;b=HEAP[d]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=7;break;case 7:e=0;b=9;break;case 8:e=d;b=9;break;case 9:return a=e;default:assert(0,"bad label: "+b)}},0,function(a,c,e){var d=STACKTOP;STACKTOP+=20;_memset(d,0,20);var f,g=null;for(f=-1;;)switch(f){case -1:var h,j,k,l,m,n=d,o=d+4,p=d+8,q=d+12,B=d+16,r,s,H;h=a;f=c;j=e;HEAP[o]=P;HEAP[p]=-1;HEAP[q]=
9;r=0;HEAP[h+56]=-1;f=_PyArg_ParseTupleAndKeywords(f,j,hb,Qa,allocate([n,0,0,0,o,0,0,0,p,0,0,0,q,0,0,0],["%struct.PyObject**",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:m=-1;f=32;break;case 2:f=HEAP[q]<=0|HEAP[q]>9?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],pa);m=-1;f=32;break;case 4:s=0;f=HEAP[HEAP[o]];f=f==85?9:f==98?5:f==114?6:f==119?6:10;break;case 5:var u=HEAP[o],g=5;f=13;break;case 6:f=r!=0?7:8;break;case 7:s=1;f=8;break;case 8:r=HEAP[HEAP[o]];
f=11;break;case 9:HEAP[h+28]=1;f=11;break;case 10:s=1;var t=HEAP[o],g=10;f=12;break;case 11:var fa=HEAP[o];s!=0?(g=11,f=12):(g=11,f=13);break;case 12:_PyErr_Format(HEAP[_PyExc_ValueError],Aa,allocate([HEAP[g==10?t:fa],0,0,0],["i32",0,0,0],ALLOC_STACK));m=-1;f=32;break;case 13:HEAP[o]=(g==5?u:fa)+1;f=HEAP[HEAP[o]]==0?14:4;break;case 14:f=r;f=f==0?15:f==114?16:17;break;case 15:r=114;f=16;break;case 16:l=ob;f=18;break;case 17:l=ib;f=18;break;case 18:HEAP[o]=l;f=_PyObject_CallFunction(_PyFile_Type,ca,
allocate([HEAP[n],0,0,0,HEAP[o],0,0,0,HEAP[p],0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0,"i32",0,0,0],ALLOC_STACK));HEAP[h+8]=f;f=HEAP[h+8]==0?19:20;break;case 19:m=-1;f=32;break;case 20:f=r==114?21:22;break;case 21:f=_PyFile_AsFile(HEAP[h+8]);f=_BZ2_bzReadOpen(B,f,0,0,0,0);HEAP[h+40]=f;f=23;break;case 22:f=HEAP[q];j=_PyFile_AsFile(HEAP[h+8]);f=_BZ2_bzWriteOpen(B,j,f,0,0);HEAP[h+40]=f;f=23;break;case 23:f=HEAP[B]!=0?24:25;break;case 24:b(HEAP[B]);f=HEAP[h+8]!=0?29:31;break;case 25:_PyFile_IncUseCount(HEAP[h+
8]);f=r==114?26:27;break;case 26:k=1;f=28;break;case 27:k=3;f=28;break;case 28:HEAP[h+44]=k;m=0;f=32;break;case 29:H=HEAP[h+8];HEAP[h+8]=0;HEAP[H]-=1;f=HEAP[H]==0?30:31;break;case 30:FUNCTION_TABLE[HEAP[HEAP[H+4]+24]](H);f=31;break;case 31:m=-1;f=32;break;case 32:return a=m,STACKTOP=d,a;default:assert(0,"bad label: "+f)}},0,_PyType_GenericAlloc,0,_PyType_GenericNew,0,_PyObject_Free,0,function(c,e){var d=STACKTOP;STACKTOP+=56;_memset(d,0,56);var f;for(f=-1;;)switch(f){case -1:var g,h,j=d,k,l,m,n,o=
d+52,p,q;g=c;f=e;m=8192;HEAP[o]=0;p=g+8;f=_PyArg_ParseTuple(f,ga,allocate([j,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;f=20;break;case 2:k=HEAP[j];l=HEAP[j+8];f=l==0?3:4;break;case 3:_PyBuffer_Release(j);h=_PyString_FromString(A);f=20;break;case 4:f=HEAP[g+56]==0?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],Sa);f=16;break;case 6:f=_PyString_FromStringAndSize(0,m);HEAP[o]=f;f=HEAP[o]==0?16:7;break;case 7:HEAP[p]=k;HEAP[p+4]=l;HEAP[p+16]=HEAP[o]+20;HEAP[p+
20]=m;n=HEAP[p+24]+HEAP[p+28]*4294967296;f=8;break;case 8:q=f=_BZ2_bzCompress(p,0);f=f!=1?9:10;break;case 9:b(q);f=16;break;case 10:var B=p;f=HEAP[p+4]==0?15:11;break;case 11:f=HEAP[B+20]==0?12:8;break;case 12:m=a(m);f=__PyString_Resize(o,m)<0?13:14;break;case 13:_BZ2_bzCompressEnd(p);f=16;break;case 14:HEAP[p+16]=HEAP[o]+20+(0-n+HEAP[p+28]*4294967296+HEAP[p+24]&4294967295);HEAP[p+20]=m+(0-HEAP[p+16])+(0-(0-(HEAP[o]+20)));f=8;break;case 15:__PyString_Resize(o,HEAP[B+24]-(n&4294967295));_PyBuffer_Release(j);
h=HEAP[o];f=20;break;case 16:_PyBuffer_Release(j);f=HEAP[o]!=0?17:19;break;case 17:f=HEAP[o];HEAP[f]-=1;f=HEAP[f]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);f=19;break;case 19:h=0;f=20;break;case 20:return g=h,STACKTOP=d,g;default:assert(0,"bad label: "+f)}},0,function(c){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j=e,k,l,m;f=c;h=8192;HEAP[j]=0;k=f+8;d=HEAP[f+56]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],
oa);d=13;break;case 2:HEAP[f+56]=0;d=_PyString_FromStringAndSize(0,h);HEAP[j]=d;d=HEAP[j]==0?16:3;break;case 3:HEAP[k+16]=HEAP[j]+20;HEAP[k+20]=h;l=HEAP[k+24]+HEAP[k+28]*4294967296;d=4;break;case 4:m=d=_BZ2_bzCompress(k,2);d=d==4?10:5;break;case 5:d=m!=3?6:7;break;case 6:b(m);d=13;break;case 7:d=HEAP[k+20]==0?8:4;break;case 8:h=a(h);d=__PyString_Resize(j,h)<0?13:9;break;case 9:HEAP[k+16]=HEAP[j]+20;HEAP[k+16]=HEAP[j]+20+(0-l+HEAP[k+28]*4294967296+HEAP[k+24]&4294967295);HEAP[k+20]=h+(0-HEAP[k+16])+
(0-(0-(HEAP[j]+20)));d=4;break;case 10:d=HEAP[k+20]!=0?11:12;break;case 11:__PyString_Resize(j,HEAP[k+24]-(l&4294967295));d=12;break;case 12:g=HEAP[j];d=17;break;case 13:d=HEAP[j]!=0?14:16;break;case 14:d=HEAP[j];HEAP[d]-=1;d=HEAP[d]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[HEAP[j]+4]+24]](HEAP[j]);d=16;break;case 16:g=0;d=17;break;case 17:return c=g,STACKTOP=e,c;default:assert(0,"bad label: "+d)}},0,function(a){_BZ2_bzCompressEnd(a+8);FUNCTION_TABLE[HEAP[HEAP[a+4]+160]](a)},0,function(a,c,
e){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var f;for(f=-1;;)switch(f){case -1:var g,h,j,k=d,l;g=a;f=c;h=e;HEAP[k]=9;f=_PyArg_ParseTupleAndKeywords(f,h,U,fb,allocate([k,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:j=-1;f=8;break;case 2:f=HEAP[k]<=0|HEAP[k]>9?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],pa);f=7;break;case 4:_llvm_memset_p0i8_i32(g+8,0,48,1,0);l=_BZ2_bzCompressInit(g+8,HEAP[k],0,0);f=l!=0?5:6;break;case 5:b(l);f=7;break;case 6:HEAP[g+56]=1;j=0;f=8;break;case 7:j=
-1;f=8;break;case 8:return a=j,STACKTOP=d,a;default:assert(0,"bad label: "+f)}},0,function(c,e){var d=STACKTOP;STACKTOP+=56;_memset(d,0,56);var f;for(f=-1;;)switch(f){case -1:var g,h,j=d,k,l,m,n,o=d+52,p,q;g=c;f=e;m=8192;HEAP[o]=0;p=g+8;f=_PyArg_ParseTuple(f,Kb,allocate([j,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;f=26;break;case 2:k=HEAP[j];l=HEAP[j+8];f=HEAP[g+56]==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_EOFError],Gb);f=22;break;case 4:f=_PyString_FromStringAndSize(0,
m);HEAP[o]=f;f=HEAP[o]==0?22:5;break;case 5:HEAP[p]=k;HEAP[p+4]=l;HEAP[p+16]=HEAP[o]+20;HEAP[p+20]=m;n=HEAP[p+24]+HEAP[p+28]*4294967296;f=6;break;case 6:q=f=_BZ2_bzDecompress(p);f=f==4?7:12;break;case 7:f=HEAP[p+4]!=0?8:11;break;case 8:f=HEAP[g+60];HEAP[f]-=1;f=HEAP[f]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[HEAP[g+60]+4]+24]](HEAP[g+60]);f=10;break;case 10:f=_PyString_FromStringAndSize(HEAP[p],HEAP[p+4]);HEAP[g+60]=f;f=11;break;case 11:HEAP[g+56]=0;f=19;break;case 12:f=q!=0?13:14;break;case 13:b(q);
f=22;break;case 14:f=HEAP[p+4]==0?19:15;break;case 15:f=HEAP[p+20]==0?16:6;break;case 16:m=a(m);f=__PyString_Resize(o,m)<0?17:18;break;case 17:_BZ2_bzDecompressEnd(p);f=22;break;case 18:HEAP[p+16]=HEAP[o]+20;HEAP[p+16]=HEAP[o]+20+(0-n+HEAP[p+28]*4294967296+HEAP[p+24]&4294967295);HEAP[p+20]=m+(0-HEAP[p+16])+(0-(0-(HEAP[o]+20)));f=6;break;case 19:f=HEAP[p+20]!=0?20:21;break;case 20:__PyString_Resize(o,HEAP[p+24]-(n&4294967295));f=21;break;case 21:_PyBuffer_Release(j);h=HEAP[o];f=26;break;case 22:_PyBuffer_Release(j);
f=HEAP[o]!=0?23:25;break;case 23:f=HEAP[o];HEAP[f]-=1;f=HEAP[f]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);f=25;break;case 25:h=0;f=26;break;case 26:return g=h,STACKTOP=d,g;default:assert(0,"bad label: "+f)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+60]!=0?1:3;break;case 1:b=HEAP[c+60];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+60]+4]+24]](HEAP[c+60]);b=3;break;case 3:_BZ2_bzDecompressEnd(c+8);FUNCTION_TABLE[HEAP[HEAP[c+
4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,c){var e;for(e=-1;;)switch(e){case -1:var d,f,g,h;d=a;e=_PyArg_ParseTuple(c,Sb,allocate(1,"i32",ALLOC_STACK))==0?1:2;break;case 1:f=-1;e=10;break;case 2:e=_PyString_FromString(A);HEAP[d+60]=e;e=HEAP[d+60]==0?6:3;break;case 3:_llvm_memset_p0i8_i32(d+8,0,48,1,0);g=_BZ2_bzDecompressInit(d+8,0,0);e=g!=0?4:5;break;case 4:b(g);e=6;break;case 5:HEAP[d+56]=1;f=0;e=10;break;case 6:e=HEAP[d+60]!=0?7:9;break;case 7:h=HEAP[d+60];HEAP[d+60]=0;
HEAP[h]-=1;e=HEAP[h]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);e=9;break;case 9:f=-1;e=10;break;case 10:return d=f;default:assert(0,"bad label: "+e)}},0,function(c,e,d){c=STACKTOP;STACKTOP+=108;_memset(c,0,108);var f;for(f=-1;;)switch(f){case -1:var g,h,j=c,k=c+4,l,m,n,o=c+56,p=c+60,q;f=e;g=d;HEAP[j]=9;HEAP[o]=0;f=_PyArg_ParseTupleAndKeywords(f,g,da,Jb,allocate([k,0,0,0,j,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;f=24;break;case 2:l=HEAP[k];
m=HEAP[k+8];f=HEAP[j]<=0|HEAP[j]>9?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],pa);_PyBuffer_Release(k);h=0;f=24;break;case 4:n=(m/100|0)+601+m;f=_PyString_FromStringAndSize(0,n);HEAP[o]=f;f=HEAP[o]==0?5:6;break;case 5:_PyBuffer_Release(k);h=0;f=24;break;case 6:_llvm_memset_p0i8_i32(p,0,48,1,0);HEAP[p]=l;HEAP[p+4]=m;HEAP[p+16]=HEAP[o]+20;HEAP[p+20]=n;q=_BZ2_bzCompressInit(p,HEAP[j],0,0);f=q!=0?7:10;break;case 7:b(q);_PyBuffer_Release(k);f=HEAP[o];HEAP[f]-=1;f=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+
4]+24]](HEAP[o]);f=9;break;case 9:h=0;f=24;break;case 10:q=f=_BZ2_bzCompress(p,2);f=f==4?21:11;break;case 11:var B=p;f=q!=3?12:15;break;case 12:_BZ2_bzCompressEnd(B);b(q);_PyBuffer_Release(k);f=HEAP[o];HEAP[f]-=1;f=HEAP[f]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);f=14;break;case 14:h=0;f=24;break;case 15:f=HEAP[B+20]==0?16:10;break;case 16:n=a(n);f=__PyString_Resize(o,n)<0?17:20;break;case 17:_BZ2_bzCompressEnd(p);_PyBuffer_Release(k);f=HEAP[o];HEAP[f]-=1;f=HEAP[f]==
0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);f=19;break;case 19:h=0;f=24;break;case 20:HEAP[p+16]=HEAP[o]+20+(HEAP[p+24]+HEAP[p+28]*4294967296&4294967295);HEAP[p+20]=n+(0-HEAP[p+16])+(0-(0-(HEAP[o]+20)));f=10;break;case 21:f=HEAP[p+20]!=0?22:23;break;case 22:__PyString_Resize(o,HEAP[p+24]);f=23;break;case 23:_BZ2_bzCompressEnd(p);_PyBuffer_Release(k);h=HEAP[o];f=24;break;case 24:return e=h,STACKTOP=c,e;default:assert(0,"bad label: "+f)}},0,function(c,e){var d=STACKTOP;STACKTOP+=
104;_memset(d,0,104);var f;for(f=-1;;)switch(f){case -1:var g,h=d,j,k,l,m=d+52,n=d+56,o;f=e;l=8192;f=_PyArg_ParseTuple(f,Kb,allocate([h,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;f=28;break;case 2:j=HEAP[h];k=HEAP[h+8];f=k==0?3:4;break;case 3:_PyBuffer_Release(h);g=_PyString_FromString(A);f=28;break;case 4:f=_PyString_FromStringAndSize(0,l);HEAP[m]=f;f=HEAP[m]==0?5:6;break;case 5:_PyBuffer_Release(h);g=0;f=28;break;case 6:_llvm_memset_p0i8_i32(n,0,48,1,0);HEAP[n]=j;
HEAP[n+4]=k;HEAP[n+16]=HEAP[m]+20;HEAP[n+20]=l;o=_BZ2_bzDecompressInit(n,0,0);f=o!=0?7:10;break;case 7:b(o);f=HEAP[m];HEAP[f]-=1;f=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);f=9;break;case 9:_PyBuffer_Release(h);g=0;f=28;break;case 10:o=f=_BZ2_bzDecompress(n);f=f==4?25:11;break;case 11:var p=n;f=o!=0?12:15;break;case 12:_BZ2_bzDecompressEnd(p);b(o);_PyBuffer_Release(h);f=HEAP[m];HEAP[f]-=1;f=HEAP[f]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);
f=14;break;case 14:g=0;f=28;break;case 15:var q=n;f=HEAP[p+4]==0?16:19;break;case 16:_BZ2_bzDecompressEnd(q);_PyErr_SetString(HEAP[_PyExc_ValueError],Wb);_PyBuffer_Release(h);f=HEAP[m];HEAP[f]-=1;f=HEAP[f]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);f=18;break;case 18:g=0;f=28;break;case 19:f=HEAP[q+20]==0?20:10;break;case 20:l=a(l);f=__PyString_Resize(m,l)<0?21:24;break;case 21:_BZ2_bzDecompressEnd(n);_PyBuffer_Release(h);f=HEAP[m];HEAP[f]-=1;f=HEAP[f]==0?22:23;break;
case 22:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);f=23;break;case 23:g=0;f=28;break;case 24:HEAP[n+16]=HEAP[m]+20+(HEAP[n+24]+HEAP[n+28]*4294967296&4294967295);HEAP[n+20]=l+(0-HEAP[n+16])+(0-(0-(HEAP[m]+20)));f=10;break;case 25:f=HEAP[n+20]!=0?26:27;break;case 26:__PyString_Resize(m,HEAP[n+24]);f=27;break;case 27:_BZ2_bzDecompressEnd(n);_PyBuffer_Release(h);g=HEAP[m];f=28;break;case 28:return STACKTOP=d,g;default:assert(0,"bad label: "+f)}},0]);k.run=j;j();return k});